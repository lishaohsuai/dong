//#include "Subdivision.h"
//#include "FileHandler.h"
//int main()
//{
//	////声明网格对象
//	//HexV3fMesh *mesh = new HexV3fMesh();
//	////声明读取句柄
//	//FileHandler file("E:\\", "block_in.mesh");
//	////读取
//	//file.read2HexMeshObj(mesh, true, true, true);
//	////初始化网格边界
//	//mesh->examine_bdy();
//
//	////单个cube
//	//HexV3fMesh *mesh = new HexV3fMesh();
//	//V3f v0(0, 1, 0);
//	//V3f v1(0, 1, 1);
//	//V3f v2(1, 1, 1);
//	//V3f v3(1, 1, 0);
//	//V3f v4(0, 0, 0);
//	//V3f v5(0, 0, 1);
//	//V3f v6(1, 0, 1);
//	//V3f v7(1, 0, 0);
//	//std::vector<VertexHandle> v;
//	//v.push_back(mesh->add_vertex(v0));
//	//v.push_back(mesh->add_vertex(v1));
//	//v.push_back(mesh->add_vertex(v2));
//	//v.push_back(mesh->add_vertex(v3));
//	//v.push_back(mesh->add_vertex(v4));
//	//v.push_back(mesh->add_vertex(v5));
//	//v.push_back(mesh->add_vertex(v6));
//	//v.push_back(mesh->add_vertex(v7));
//	//mesh->add_cell(v);
//
//	////两个cube
//	//HexV3fMesh *mesh = new HexV3fMesh();
//	//V3f v0(-1, 0, 0);
//	//V3f v1(-1, 0, 1);
//	//V3f v2(0, 0, 1);
//	//V3f v3(0, 0, 0);
//	//V3f v4(-1, 1, 0);
//	//V3f v5(-1, 1, 1);
//	//V3f v6(0, 1, 1);
//	//V3f v7(0, 1, 0);
//	//V3f v8(0, 0, -1);
//	//V3f v9(1, 0, 0);
//	//V3f v10(1, 0, -1);
//	//V3f v11(0, 1, -1);
//	//V3f v12(1, 1, 0);
//	//V3f v13(1, 1, -1);
//	//std::vector<VertexHandle> c1;
//	//c1.push_back(mesh->add_vertex(v0));
//	//c1.push_back(mesh->add_vertex(v1));
//	//c1.push_back(mesh->add_vertex(v2));
//	//c1.push_back(mesh->add_vertex(v3));
//	//c1.push_back(mesh->add_vertex(v4));
//	//c1.push_back(mesh->add_vertex(v5));
//	//c1.push_back(mesh->add_vertex(v6));
//	//c1.push_back(mesh->add_vertex(v7));
//	//mesh->add_cell(c1);
//	//std::vector<VertexHandle> c2;
//	//c2.push_back(mesh->add_vertex(v8));
//	//c2.push_back(mesh->add_vertex(v3));
//	//c2.push_back(mesh->add_vertex(v9));
//	//c2.push_back(mesh->add_vertex(v10));
//	//c2.push_back(mesh->add_vertex(v11));
//	//c2.push_back(mesh->add_vertex(v7));
//	//c2.push_back(mesh->add_vertex(v12));
//	//c2.push_back(mesh->add_vertex(v13));
//	//mesh->add_cell(c2);
//
//	////4个cube组成的圆环
//	//HexV3fMesh *mesh = new HexV3fMesh();
//	//V3f v0(0, 0, 0);
//	//V3f v1(0, 0, 2);
//	//V3f v2(2, 0, 2);
//	//V3f v3(2, 0, 0);
//	//V3f v4(0 ,2, 0);
//	//V3f v5(0, 2, 2);
//	//V3f v6(2, 2, 2);
//	//V3f v7(2, 2, 0);
//	//V3f v8(-2, 4, 0);
//	//V3f v9(-2, 4, 2);
//	//V3f v10(4, 4, 2);
//	//V3f v11(4, 4, 0);
//	//V3f v12(-2, -2, 0);
//	//V3f v13(-2, -2, 2);
//	//V3f v14(4, -2, 2);
//	//V3f v15(4, -2, 0);
//	//std::vector<VertexHandle> c1;
//	//c1.push_back(mesh->add_vertex(v8));
//	//c1.push_back(mesh->add_vertex(v9));
//	//c1.push_back(mesh->add_vertex(v10));
//	//c1.push_back(mesh->add_vertex(v11));
//	//c1.push_back(mesh->add_vertex(v4));
//	//c1.push_back(mesh->add_vertex(v5));
//	//c1.push_back(mesh->add_vertex(v6));
//	//c1.push_back(mesh->add_vertex(v7));
//	//mesh->add_cell(c1);
//	//std::vector<VertexHandle> c2;
//	//c2.push_back(mesh->add_vertex(v8));
//	//c2.push_back(mesh->add_vertex(v9));
//	//c2.push_back(mesh->add_vertex(v5));
//	//c2.push_back(mesh->add_vertex(v4));
//	//c2.push_back(mesh->add_vertex(v12));
//	//c2.push_back(mesh->add_vertex(v13));
//	//c2.push_back(mesh->add_vertex(v1));
//	//c2.push_back(mesh->add_vertex(v0));
//	//mesh->add_cell(c2);
//	//std::vector<VertexHandle> c3;
//	//c3.push_back(mesh->add_vertex(v12));
//	//c3.push_back(mesh->add_vertex(v13));
//	//c3.push_back(mesh->add_vertex(v1));
//	//c3.push_back(mesh->add_vertex(v0));
//	//c3.push_back(mesh->add_vertex(v15));
//	//c3.push_back(mesh->add_vertex(v14));
//	//c3.push_back(mesh->add_vertex(v2));
//	//c3.push_back(mesh->add_vertex(v3));
//	//mesh->add_cell(c3);
//	//std::vector<VertexHandle> c4;
//	//c4.push_back(mesh->add_vertex(v7));
//	//c4.push_back(mesh->add_vertex(v6));
//	//c4.push_back(mesh->add_vertex(v10));
//	//c4.push_back(mesh->add_vertex(v11));
//	//c4.push_back(mesh->add_vertex(v3));
//	//c4.push_back(mesh->add_vertex(v2));
//	//c4.push_back(mesh->add_vertex(v14));
//	//c4.push_back(mesh->add_vertex(v15));
//	//mesh->add_cell(c4);
//	
//	////6个cube组成的戒指
//	//HexV3fMesh *mesh = new HexV3fMesh();
//	//V3f v0(0, 0, 0);
//	//V3f v1(0, 0, 4);
//	//V3f v2(0, 8, 0);
//	//V3f v3(0, 8, 4);
//	//V3f v4(-1, -1, 0);
//	//V3f v5(-1, -1, 4);
//	//V3f v6(-1, 9, 4);
//	//V3f v7(-1, 9, 0);
//	//V3f v8(8, 0, 0);
//	//V3f v9(8, 0, 4);
//	//V3f v10(8, 8, 4);
//	//V3f v11(8, 8, 0);
//	//V3f v12(9, -1, 0);
//	//V3f v13(9, -1, 4);
//	//V3f v14(9, 9, 0);
//	//V3f v15(9, 9, 4);
//	//V3f v16(10, 5, 1);
//	//V3f v17(10, 5, 3);
//	//V3f v18(10, 3, 1);
//	//V3f v19(10, 3, 3);
//	//V3f v20(12, 6, 0);
//	//V3f v21(12, 6, 4);
//	//V3f v22(12, 2, 4);
//	//V3f v23(12, 2, 0);
//	//std::vector<VertexHandle> c1;
//	//c1.push_back(mesh->add_vertex(v2));
//	//c1.push_back(mesh->add_vertex(v3));
//	//c1.push_back(mesh->add_vertex(v1));
//	//c1.push_back(mesh->add_vertex(v0));
//	//c1.push_back(mesh->add_vertex(v7));
//	//c1.push_back(mesh->add_vertex(v6));
//	//c1.push_back(mesh->add_vertex(v5));
//	//c1.push_back(mesh->add_vertex(v4));
//	//mesh->add_cell(c1);
//	//std::vector<VertexHandle> c2;
//	//c2.push_back(mesh->add_vertex(v7));
//	//c2.push_back(mesh->add_vertex(v6));
//	//c2.push_back(mesh->add_vertex(v15));
//	//c2.push_back(mesh->add_vertex(v14));
//	//c2.push_back(mesh->add_vertex(v2));
//	//c2.push_back(mesh->add_vertex(v3));
//	//c2.push_back(mesh->add_vertex(v10));
//	//c2.push_back(mesh->add_vertex(v11));
//	//mesh->add_cell(c2);
//	//std::vector<VertexHandle> c3;
//	//c3.push_back(mesh->add_vertex(v0));
//	//c3.push_back(mesh->add_vertex(v1));
//	//c3.push_back(mesh->add_vertex(v9));
//	//c3.push_back(mesh->add_vertex(v8));
//	//c3.push_back(mesh->add_vertex(v4));
//	//c3.push_back(mesh->add_vertex(v5));
//	//c3.push_back(mesh->add_vertex(v13));
//	//c3.push_back(mesh->add_vertex(v12));
//	//mesh->add_cell(c3);
//	//std::vector<VertexHandle> c4;
//	//c4.push_back(mesh->add_vertex(v14));
//	//c4.push_back(mesh->add_vertex(v15));
//	//c4.push_back(mesh->add_vertex(v13));
//	//c4.push_back(mesh->add_vertex(v12));
//	//c4.push_back(mesh->add_vertex(v11));
//	//c4.push_back(mesh->add_vertex(v10));
//	//c4.push_back(mesh->add_vertex(v9));
//	//c4.push_back(mesh->add_vertex(v8));
//	//mesh->add_cell(c4);
//	//std::vector<VertexHandle> c5;
//	//c5.push_back(mesh->add_vertex(v16));
//	//c5.push_back(mesh->add_vertex(v17));
//	//c5.push_back(mesh->add_vertex(v19));
//	//c5.push_back(mesh->add_vertex(v18));
//	//c5.push_back(mesh->add_vertex(v14));
//	//c5.push_back(mesh->add_vertex(v15));
//	//c5.push_back(mesh->add_vertex(v13));
//	//c5.push_back(mesh->add_vertex(v12));
//	//mesh->add_cell(c5);
//	//std::vector<VertexHandle> c6;
//	//c6.push_back(mesh->add_vertex(v20));
//	//c6.push_back(mesh->add_vertex(v21));
//	//c6.push_back(mesh->add_vertex(v22));
//	//c6.push_back(mesh->add_vertex(v23));
//	//c6.push_back(mesh->add_vertex(v16));
//	//c6.push_back(mesh->add_vertex(v17));
//	//c6.push_back(mesh->add_vertex(v19));
//	//c6.push_back(mesh->add_vertex(v18));
//	//mesh->add_cell(c6);
//
//	////8cube组成的A
//    //HexV3fMesh *mesh = new HexV3fMesh();
//	//V3f v0(0, 0, 0);
//	//V3f v1(0, 0, 1);
//	//V3f v2(3, 0, 1);
//	//V3f v3(3, 0, 0);
//	//V3f v4(1, 1, 0);
//	//V3f v5(2, 1, 0);
//	//V3f v6(1, 1, 1);
//	//V3f v7(2, 1, 1);
//	//V3f v8(0, 2, 0);
//	//V3f v9(1, 2, 0);
//	//V3f v10(2, 2, 0);
//	//V3f v11(3, 2, 0);
//	//V3f v12(0, 2, 1);
//	//V3f v13(1, 2, 1);
//	//V3f v14(2, 2, 1);
//	//V3f v15(3, 2, 1);
//	//V3f v16(0, 3, 0);
//	//V3f v17(1, 3, 0);
//	//V3f v18(2, 3, 0);
//	//V3f v19(3, 3, 0);
//	//V3f v20(0, 3, 1);
//	//V3f v21(1, 3, 1);
//	//V3f v22(2, 3, 1);
//	//V3f v23(3, 3, 1);
//	//V3f v24(0, 4, 0);
//	//V3f v25(1, 4, 0);
//	//V3f v26(2, 4, 0);
//	//V3f v27(3, 4, 0);
//	//V3f v28(0, 4, 1);
//	//V3f v29(1, 4, 1);
//	//V3f v30(2, 4, 1);
//	//V3f v31(3, 4, 1);
//	//std::vector<VertexHandle> c1;
//	//c1.push_back(mesh->add_vertex(v4));
//	//c1.push_back(mesh->add_vertex(v6));
//	//c1.push_back(mesh->add_vertex(v7));
//	//c1.push_back(mesh->add_vertex(v5));
//	//c1.push_back(mesh->add_vertex(v0));
//	//c1.push_back(mesh->add_vertex(v1));
//	//c1.push_back(mesh->add_vertex(v2));
//	//c1.push_back(mesh->add_vertex(v3));
//	//mesh->add_cell(c1);
//	//std::vector<VertexHandle> c2;
//	//c2.push_back(mesh->add_vertex(v8));
//	//c2.push_back(mesh->add_vertex(v12));
//	//c2.push_back(mesh->add_vertex(v13));
//	//c2.push_back(mesh->add_vertex(v9));
//	//c2.push_back(mesh->add_vertex(v0));
//	//c2.push_back(mesh->add_vertex(v1));
//	//c2.push_back(mesh->add_vertex(v6));
//	//c2.push_back(mesh->add_vertex(v4));
//	//mesh->add_cell(c2);
//	//std::vector<VertexHandle> c3;
//	//c3.push_back(mesh->add_vertex(v10));
//	//c3.push_back(mesh->add_vertex(v14));
//	//c3.push_back(mesh->add_vertex(v15));
//	//c3.push_back(mesh->add_vertex(v11));
//	//c3.push_back(mesh->add_vertex(v5));
//	//c3.push_back(mesh->add_vertex(v7));
//	//c3.push_back(mesh->add_vertex(v2));
//	//c3.push_back(mesh->add_vertex(v3));
//	//mesh->add_cell(c3);
//	//std::vector<VertexHandle> c4;
//	//c4.push_back(mesh->add_vertex(v16));
//	//c4.push_back(mesh->add_vertex(v20));
//	//c4.push_back(mesh->add_vertex(v21));
//	//c4.push_back(mesh->add_vertex(v17));
//	//c4.push_back(mesh->add_vertex(v8));
//	//c4.push_back(mesh->add_vertex(v12));
//	//c4.push_back(mesh->add_vertex(v13));
//	//c4.push_back(mesh->add_vertex(v9));
//	//mesh->add_cell(c4);
//	//std::vector<VertexHandle> c5;
//	//c5.push_back(mesh->add_vertex(v17));
//	//c5.push_back(mesh->add_vertex(v21));
//	//c5.push_back(mesh->add_vertex(v22));
//	//c5.push_back(mesh->add_vertex(v18));
//	//c5.push_back(mesh->add_vertex(v9));
//	//c5.push_back(mesh->add_vertex(v13));
//	//c5.push_back(mesh->add_vertex(v14));
//	//c5.push_back(mesh->add_vertex(v10));
//	//mesh->add_cell(c5);
//	//std::vector<VertexHandle> c6;
//	//c6.push_back(mesh->add_vertex(v18));
//	//c6.push_back(mesh->add_vertex(v22));
//	//c6.push_back(mesh->add_vertex(v23));
//	//c6.push_back(mesh->add_vertex(v19));
//	//c6.push_back(mesh->add_vertex(v10));
//	//c6.push_back(mesh->add_vertex(v14));
//	//c6.push_back(mesh->add_vertex(v15));
//	//c6.push_back(mesh->add_vertex(v11));
//	//mesh->add_cell(c6);
//	//std::vector<VertexHandle> c7;
//	//c7.push_back(mesh->add_vertex(v24));
//	//c7.push_back(mesh->add_vertex(v28));
//	//c7.push_back(mesh->add_vertex(v29));
//	//c7.push_back(mesh->add_vertex(v25));
//	//c7.push_back(mesh->add_vertex(v16));
//	//c7.push_back(mesh->add_vertex(v20));
//	//c7.push_back(mesh->add_vertex(v21));
//	//c7.push_back(mesh->add_vertex(v17));
//	//mesh->add_cell(c7);
//	//std::vector<VertexHandle> c8;
//	//c8.push_back(mesh->add_vertex(v26));
//	//c8.push_back(mesh->add_vertex(v30));
//	//c8.push_back(mesh->add_vertex(v31));
//	//c8.push_back(mesh->add_vertex(v27));
//	//c8.push_back(mesh->add_vertex(v18));
//	//c8.push_back(mesh->add_vertex(v22));
//	//c8.push_back(mesh->add_vertex(v23));
//	//c8.push_back(mesh->add_vertex(v19));
//	//mesh->add_cell(c8);
//
//    //测试奇异点模型
//    HexV3fMesh *mesh = new HexV3fMesh();
//	V3f v0(-1, 1, 0);
//	V3f v1(0, 1, 0);
//	V3f v2(1, 1, 0);
//	V3f v3(-1, 0, 0);
//	V3f v4(0, 0, 0);
//	V3f v5(1, 0, 0);
//	V3f v6(-1, -1, 0);
//	V3f v7(-0.3, -0.7, 0);
//	V3f v8(0.3, -0.7, 0);
//	V3f v9(1, -1, 0);
//	V3f v10(-1, 1, 2);
//	V3f v11(0, 1, 2);
//	V3f v12(1, 1, 2);
//	V3f v13(-1, 0, 2);
//	V3f v14(0, 0, 2);
//	V3f v15(1, 0, 2);
//	V3f v16(-1, -1, 2);
//	V3f v17(-0.3, -0.7, 2);
//	V3f v18(0.3, -0.7, 2);
//	V3f v19(1, -1, 2);
//	V3f v20(0, -1, 0);
//	V3f v21(0, -1, 2);
//	std::vector<VertexHandle> c1;
//	c1.push_back(mesh->add_vertex(v3));
//	c1.push_back(mesh->add_vertex(v13));
//	c1.push_back(mesh->add_vertex(v14));
//	c1.push_back(mesh->add_vertex(v4));
//	c1.push_back(mesh->add_vertex(v0));
//	c1.push_back(mesh->add_vertex(v10));
//	c1.push_back(mesh->add_vertex(v11));
//	c1.push_back(mesh->add_vertex(v1));
//	mesh->add_cell(c1);
//	std::vector<VertexHandle> c2;
//	c2.push_back(mesh->add_vertex(v4));
//	c2.push_back(mesh->add_vertex(v14));
//	c2.push_back(mesh->add_vertex(v15));
//	c2.push_back(mesh->add_vertex(v5));
//	c2.push_back(mesh->add_vertex(v1));
//	c2.push_back(mesh->add_vertex(v11));
//	c2.push_back(mesh->add_vertex(v12));
//	c2.push_back(mesh->add_vertex(v2));
//	mesh->add_cell(c2);
//	std::vector<VertexHandle> c3;
//	c3.push_back(mesh->add_vertex(v6));
//	c3.push_back(mesh->add_vertex(v16));
//	c3.push_back(mesh->add_vertex(v17));
//	c3.push_back(mesh->add_vertex(v7));
//	c3.push_back(mesh->add_vertex(v3));
//	c3.push_back(mesh->add_vertex(v13));
//	c3.push_back(mesh->add_vertex(v14));
//	c3.push_back(mesh->add_vertex(v4));
//	mesh->add_cell(c3);
//	std::vector<VertexHandle> c4;
//	c4.push_back(mesh->add_vertex(v7));
//	c4.push_back(mesh->add_vertex(v17));
//	c4.push_back(mesh->add_vertex(v21));
//	c4.push_back(mesh->add_vertex(v20));
//	c4.push_back(mesh->add_vertex(v4));
//	c4.push_back(mesh->add_vertex(v14));
//	c4.push_back(mesh->add_vertex(v18));
//	c4.push_back(mesh->add_vertex(v8));
//	mesh->add_cell(c4);
//	std::vector<VertexHandle> c5;
//	c5.push_back(mesh->add_vertex(v8));
//	c5.push_back(mesh->add_vertex(v18));
//	c5.push_back(mesh->add_vertex(v19));
//	c5.push_back(mesh->add_vertex(v9));
//	c5.push_back(mesh->add_vertex(v4));
//	c5.push_back(mesh->add_vertex(v14));
//	c5.push_back(mesh->add_vertex(v15));
//	c5.push_back(mesh->add_vertex(v5));
//	mesh->add_cell(c5);
//
//
//
//	mesh->examine_bdy();
//	mesh->examine_crease();
//	//mesh->examine_singular();
//	//std::vector<V3f> v_c_crease;
//	std::vector<V3f> v_c_crease = mesh->v_c_crease;
//	std::vector<V3f> v_crease = mesh->v_crease;
//	/*v_crease.push_back(V3f(12, 6, 0));
//	v_crease.push_back(V3f(12, 6, 4));
//	v_crease.push_back(V3f(12, 2, 4));
//	v_crease.push_back(V3f(12, 2, 0));
//	v_crease.push_back(V3f(10, 5, 1));
//	v_crease.push_back(V3f(10, 5, 3));
//	v_crease.push_back(V3f(10, 3, 1));
//	v_crease.push_back(V3f(10, 3, 3));*/
//	std::vector<V3f> v3f_singular;
//		
//	int time = 0; int n = 2;
//	while (time < n)
//	{
//		HexV3fMesh *newmesh = new HexV3fMesh();
//		Split split(mesh, newmesh, v_crease);
//		HexV3fMesh result1 = split.Spliting();
//		v_crease = split.v_crease;
//		*mesh = result1;
//		mesh->examine_bdy();
//		mesh->examine_singular();
//		v3f_singular = mesh->v3f_singular;
//		/*SingularObject sin(mesh);
//		sin.FindSingularObject_simple();*/
//		//Average average(mesh, v_crease, v_c_crease);
//		//Average average(mesh);
//		Average average(mesh, v3f_singular);
//		HexV3fMesh result2 = average.Averaging_test();
//		//v3f_singular = average.v3f_singular;
//		v_crease = average.v_crease;
//		*mesh = result2;
//		time++;
//	}
//	/*HexV3fMesh *newmesh = new HexV3fMesh();
//	Split split(mesh, newmesh);
//	HexV3fMesh result1 = split.Spliting();
//	*mesh = result1;*/
//
//
//	FileHandler filenew = FileHandler();
//	std::vector<HexV3fMesh> bc_vec;
//	bc_vec.push_back(*mesh);
//	char name[50];
//	std::sprintf(name, "E://DatResult/test1.off");
//	filenew.write2OffFile(name, mesh);
//	system("pause");
//}