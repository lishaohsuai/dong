/********************************************************************************
** Form generated from reading UI file 'HexMeshViewer.ui'
**
** Created by: Qt User Interface Compiler version 5.12.10
**
** WARNING! All changes made in this file will be lost when recompiling UI file!
********************************************************************************/

#ifndef UI_HEXMESHVIEWER_H
#define UI_HEXMESHVIEWER_H

#include <QtCore/QVariant>
#include <QtWidgets/QAction>
#include <QtWidgets/QApplication>
#include <QtWidgets/QGridLayout>
#include <QtWidgets/QMainWindow>
#include <QtWidgets/QMenu>
#include <QtWidgets/QMenuBar>
#include <QtWidgets/QStatusBar>
#include <QtWidgets/QToolBar>
#include <QtWidgets/QVBoxLayout>
#include <QtWidgets/QWidget>
#include "CuttingWidget.h"
#include "QGLViewerWidget.h"

QT_BEGIN_NAMESPACE

class Ui_HexMeshViewerClass
{
public:
    QAction *actionOpen;
    QAction *actionSave;
    QAction *actionWIRE_FRAME;
    QAction *actionFLAT_LINES;
    QAction *actionSOLID_FLAT;
    QAction *actionALL_LINES;
    QAction *actionALL_POLY;
    QAction *actionSubdvision;
    QAction *actionALL_POINTS;
    QAction *actionClear_ALL;
    QAction *actionSubdvision2;
    QAction *actionAdd_Mesh;
    QAction *actionSubdvision3;
    QAction *actionSubdvision4;
    QAction *actionVOLUME_TEXTURE;
    QAction *actionSubdvision5;
    QAction *actionSubdvision6;
    QAction *actionSplit;
    QAction *actionShow_Oriv;
    QAction *actionShow_BB;
    QAction *actionShow_OriBB;
    QAction *actionShow_OvandV;
    QAction *actionSubdvision7;
    QAction *actionShow_SE_and_SV;
    QAction *actionShi_xiong;
    QAction *actionOpenVTK;
    QAction *actionApproximationCC;
    QAction *actionShow_BeiV;
    QAction *actionShow_Beiframe;
    QAction *actionShow_Beiflatline;
    QAction *actionConstructBezier;
    QAction *actionAppCCSolid;
    QAction *actionConstructBS;
    QAction *actionSaveDAT;
    QAction *actionAppCCSolidDAT;
    QAction *actionConstructBSDAT;
    QAction *actionCompare;
    QAction *actionAppCCSolidNoS;
    QAction *actionConstructBSNoS;
    QAction *actionDAT1;
    QAction *actionDAT2;
    QAction *actionDAT3;
    QAction *actionDAT1_2;
    QAction *actionDAT2_2;
    QAction *actionDAT3_2;
    QAction *actionDAT4;
    QAction *actionDAT4_2;
    QAction *actionAppCCsolidNSDAT;
    QAction *actionConsturctBSNCDAT;
    QAction *actionDAT5;
    QAction *actionIsoline;
    QAction *actionDatPoint;
    QAction *actionDatPoint2;
    QAction *actionInterior_Point;
    QAction *actionEdge_Point;
    QAction *actionCorner_Point;
    QAction *actionDAT5_1;
    QAction *actionError;
    QAction *actionAdd_CC;
    QAction *actionMesh;
    QAction *actionMesh1;
    QAction *actionSort_Two_Mesh;
    QAction *actionError1;
    QAction *actionCombine;
    QAction *actionSingular1;
    QAction *actionSingular2;
    QAction *actionSingular3;
    QAction *actionView_singular;
    QAction *actionSelect_one_point;
    QAction *actionInitialModel;
    QAction *action4_Point;
    QAction *action6_Point;
    QAction *action2n_Point;
    QAction *actionSaveAXL;
    QAction *action2n_Point_Line;
    QAction *actionDelete_Cell;
    QAction *actionCCSub_1;
    QAction *actionAppCCSolidDAT_1;
    QAction *actionConstructModel;
    QAction *actionCalPDE;
    QAction *actionConstructModel_1;
    QAction *actionBSplineSolidDAT;
    QAction *actionExactSol;
    QAction *actionERRORV;
    QAction *actionTESTDraw;
    QAction *actionSIMP;
    QAction *actionSIMP1;
    QAction *actionNewSIMP;
    QAction *actionDelete;
    QAction *actionSplit1;
    QAction *actionCCSub_New;
    QAction *actionConstructModel_1_new;
    QAction *actionSIMP_new;
    QAction *actionConstructModel_new;
    QAction *actionNewSIMP_new;
    QAction *actionPick_Point;
    QAction *actionPick_Edge;
    QAction *actionOutput_PickPoint;
    QAction *actionRead_PickPoint;
    QAction *actionPDESparse;
    QAction *actionPDESparseOld;
    QAction *actionPDESparseSIMP;
    QAction *actionPDESpareLiner;
    QAction *actionPDESpareLiner_2;
    QAction *actionIsoline1;
    QAction *actionIsoline2;
    QAction *actionOutput_PickedEdge;
    QAction *actionRead_PickedEdge;
    QAction *actionOpen_Model;
    QAction *actionPick_Face;
    QAction *actionOutput_PickedFace;
    QAction *actionRead_PickedFace;
    QAction *actionDelete_Face;
    QAction *actionPick_Cell;
    QAction *actionOutput_PickedAll;
    QAction *actionRead_PickedAll;
    QAction *actionDelete_Cell_2;
    QAction *actionSaveVTK;
    QAction *actionOpenOBJ;
    QAction *actionBeibdyDAT;
    QAction *actionCheckCell;
    QAction *actionPDELinerShow;
    QAction *actionPreparePDE;
    QAction *actionDrawBeisur;
    QAction *actionDeleteBeisur;
    QAction *actionOutputDraw;
    QAction *actionReadDraw;
    QAction *actionOpDraw;
    QAction *actionShow_two_mesh;
    QAction *actionSingularFace;
    QAction *actionShow_two_mesh_singular;
    QAction *actionDrawFrame;
    QAction *actionPDESquareLiner_Muti;
    QAction *actionSOLIDFLAT_FRAME;
    QAction *actionDelete_Cell1;
    QAction *actionBeibdyDAT1;
    QAction *actionOpenVTK_Tri;
    QAction *actionDrameFrame1;
    QAction *actionFrame;
    QAction *actionOutput_MAXMIN;
    QAction *actionSphereDraw;
    QAction *actionErrorAndFrame;
    QAction *actionFrame_2;
    QAction *actionGrab;
    QAction *actionReadLine;
    QAction *actionOutputline;
    QAction *actionOpenVtk_smooth;
    QAction *actionTisu;
    QAction *actionFrameTisu;
    QAction *actionOutputCSV;
    QAction *actionReadCSV;
    QAction *actionSmooth;
    QAction *actionBezierLine;
    QAction *actionQuadCC_Crease;
    QAction *actionQuadV;
    QAction *actionSetQuad1;
    QAction *actionShowTwoQuad;
    QAction *actionPick_Point_2;
    QAction *actionSetFrame;
    QAction *actionShowFrame;
    QAction *actionShowQuad;
    QAction *actionPick_curve;
    QAction *actionOutput_curve;
    QAction *actionRead_curve;
    QAction *actionBezierBDY;
    QAction *actionBezierSharp;
    QAction *actionCheckbei;
    QAction *actionClear_edge;
    QAction *actionDATonly;
    QAction *actionAdd_HexMesh;
    QAction *actionBezierSharp1;
    QAction *actionDraw_BSvector;
    QAction *actionTransformation;
    QAction *actionX;
    QAction *actionX_2;
    QAction *actionZ;
    QAction *actionZ_2;
    QAction *actionAngle;
    QAction *actionAngle_2;
    QAction *actionScale;
    QAction *actionScale_2;
    QAction *actionDraw_framevector;
    QAction *actionRead_PickedEdge1;
    QAction *actionOpenBezier;
    QAction *actionOpenBezier1;
    QAction *actionOpenBezier2;
    QAction *actionOpenBezierNew;
    QAction *actionActionCalPDE1;
    QAction *actionVervexNum;
    QAction *actionReadXJ;
    QAction *actionALL_LINES1;
    QAction *actionReadMSH;
    QAction *actionPICKFACE;
    QWidget *centralWidget;
    QGridLayout *gridLayout;
    QWidget *widget_2;
    QGridLayout *gridLayout_2;
    CuttingWidget *widget_3;
    QVBoxLayout *verticalLayout;
    QGLViewerWidget *widget;
    QMenuBar *menuBar;
    QMenu *menuFile;
    QMenu *menuFunction;
    QMenu *menuFunction_2;
    QMenu *menuOther;
    QMenu *menuMore;
    QMenu *menu2n_Point;
    QMenu *menuPDE;
    QMenu *menuPDE_Extra;
    QMenu *menuExtra;
    QMenu *menuLine;
    QMenu *menuMove;
    QToolBar *mainToolBar;
    QStatusBar *statusBar;

    void setupUi(QMainWindow *HexMeshViewerClass)
    {
        if (HexMeshViewerClass->objectName().isEmpty())
            HexMeshViewerClass->setObjectName(QString::fromUtf8("HexMeshViewerClass"));
        HexMeshViewerClass->resize(1076, 855);
        actionOpen = new QAction(HexMeshViewerClass);
        actionOpen->setObjectName(QString::fromUtf8("actionOpen"));
        actionSave = new QAction(HexMeshViewerClass);
        actionSave->setObjectName(QString::fromUtf8("actionSave"));
        actionWIRE_FRAME = new QAction(HexMeshViewerClass);
        actionWIRE_FRAME->setObjectName(QString::fromUtf8("actionWIRE_FRAME"));
        actionFLAT_LINES = new QAction(HexMeshViewerClass);
        actionFLAT_LINES->setObjectName(QString::fromUtf8("actionFLAT_LINES"));
        actionSOLID_FLAT = new QAction(HexMeshViewerClass);
        actionSOLID_FLAT->setObjectName(QString::fromUtf8("actionSOLID_FLAT"));
        actionALL_LINES = new QAction(HexMeshViewerClass);
        actionALL_LINES->setObjectName(QString::fromUtf8("actionALL_LINES"));
        actionALL_POLY = new QAction(HexMeshViewerClass);
        actionALL_POLY->setObjectName(QString::fromUtf8("actionALL_POLY"));
        actionSubdvision = new QAction(HexMeshViewerClass);
        actionSubdvision->setObjectName(QString::fromUtf8("actionSubdvision"));
        actionALL_POINTS = new QAction(HexMeshViewerClass);
        actionALL_POINTS->setObjectName(QString::fromUtf8("actionALL_POINTS"));
        actionClear_ALL = new QAction(HexMeshViewerClass);
        actionClear_ALL->setObjectName(QString::fromUtf8("actionClear_ALL"));
        actionSubdvision2 = new QAction(HexMeshViewerClass);
        actionSubdvision2->setObjectName(QString::fromUtf8("actionSubdvision2"));
        actionAdd_Mesh = new QAction(HexMeshViewerClass);
        actionAdd_Mesh->setObjectName(QString::fromUtf8("actionAdd_Mesh"));
        actionSubdvision3 = new QAction(HexMeshViewerClass);
        actionSubdvision3->setObjectName(QString::fromUtf8("actionSubdvision3"));
        actionSubdvision4 = new QAction(HexMeshViewerClass);
        actionSubdvision4->setObjectName(QString::fromUtf8("actionSubdvision4"));
        actionVOLUME_TEXTURE = new QAction(HexMeshViewerClass);
        actionVOLUME_TEXTURE->setObjectName(QString::fromUtf8("actionVOLUME_TEXTURE"));
        actionSubdvision5 = new QAction(HexMeshViewerClass);
        actionSubdvision5->setObjectName(QString::fromUtf8("actionSubdvision5"));
        actionSubdvision6 = new QAction(HexMeshViewerClass);
        actionSubdvision6->setObjectName(QString::fromUtf8("actionSubdvision6"));
        actionSplit = new QAction(HexMeshViewerClass);
        actionSplit->setObjectName(QString::fromUtf8("actionSplit"));
        actionShow_Oriv = new QAction(HexMeshViewerClass);
        actionShow_Oriv->setObjectName(QString::fromUtf8("actionShow_Oriv"));
        actionShow_BB = new QAction(HexMeshViewerClass);
        actionShow_BB->setObjectName(QString::fromUtf8("actionShow_BB"));
        actionShow_OriBB = new QAction(HexMeshViewerClass);
        actionShow_OriBB->setObjectName(QString::fromUtf8("actionShow_OriBB"));
        actionShow_OvandV = new QAction(HexMeshViewerClass);
        actionShow_OvandV->setObjectName(QString::fromUtf8("actionShow_OvandV"));
        actionSubdvision7 = new QAction(HexMeshViewerClass);
        actionSubdvision7->setObjectName(QString::fromUtf8("actionSubdvision7"));
        actionShow_SE_and_SV = new QAction(HexMeshViewerClass);
        actionShow_SE_and_SV->setObjectName(QString::fromUtf8("actionShow_SE_and_SV"));
        actionShi_xiong = new QAction(HexMeshViewerClass);
        actionShi_xiong->setObjectName(QString::fromUtf8("actionShi_xiong"));
        actionOpenVTK = new QAction(HexMeshViewerClass);
        actionOpenVTK->setObjectName(QString::fromUtf8("actionOpenVTK"));
        actionApproximationCC = new QAction(HexMeshViewerClass);
        actionApproximationCC->setObjectName(QString::fromUtf8("actionApproximationCC"));
        actionShow_BeiV = new QAction(HexMeshViewerClass);
        actionShow_BeiV->setObjectName(QString::fromUtf8("actionShow_BeiV"));
        actionShow_Beiframe = new QAction(HexMeshViewerClass);
        actionShow_Beiframe->setObjectName(QString::fromUtf8("actionShow_Beiframe"));
        actionShow_Beiflatline = new QAction(HexMeshViewerClass);
        actionShow_Beiflatline->setObjectName(QString::fromUtf8("actionShow_Beiflatline"));
        actionConstructBezier = new QAction(HexMeshViewerClass);
        actionConstructBezier->setObjectName(QString::fromUtf8("actionConstructBezier"));
        actionAppCCSolid = new QAction(HexMeshViewerClass);
        actionAppCCSolid->setObjectName(QString::fromUtf8("actionAppCCSolid"));
        actionConstructBS = new QAction(HexMeshViewerClass);
        actionConstructBS->setObjectName(QString::fromUtf8("actionConstructBS"));
        actionSaveDAT = new QAction(HexMeshViewerClass);
        actionSaveDAT->setObjectName(QString::fromUtf8("actionSaveDAT"));
        actionAppCCSolidDAT = new QAction(HexMeshViewerClass);
        actionAppCCSolidDAT->setObjectName(QString::fromUtf8("actionAppCCSolidDAT"));
        actionConstructBSDAT = new QAction(HexMeshViewerClass);
        actionConstructBSDAT->setObjectName(QString::fromUtf8("actionConstructBSDAT"));
        actionCompare = new QAction(HexMeshViewerClass);
        actionCompare->setObjectName(QString::fromUtf8("actionCompare"));
        actionAppCCSolidNoS = new QAction(HexMeshViewerClass);
        actionAppCCSolidNoS->setObjectName(QString::fromUtf8("actionAppCCSolidNoS"));
        actionConstructBSNoS = new QAction(HexMeshViewerClass);
        actionConstructBSNoS->setObjectName(QString::fromUtf8("actionConstructBSNoS"));
        actionDAT1 = new QAction(HexMeshViewerClass);
        actionDAT1->setObjectName(QString::fromUtf8("actionDAT1"));
        actionDAT2 = new QAction(HexMeshViewerClass);
        actionDAT2->setObjectName(QString::fromUtf8("actionDAT2"));
        actionDAT3 = new QAction(HexMeshViewerClass);
        actionDAT3->setObjectName(QString::fromUtf8("actionDAT3"));
        actionDAT1_2 = new QAction(HexMeshViewerClass);
        actionDAT1_2->setObjectName(QString::fromUtf8("actionDAT1_2"));
        actionDAT2_2 = new QAction(HexMeshViewerClass);
        actionDAT2_2->setObjectName(QString::fromUtf8("actionDAT2_2"));
        actionDAT3_2 = new QAction(HexMeshViewerClass);
        actionDAT3_2->setObjectName(QString::fromUtf8("actionDAT3_2"));
        actionDAT4 = new QAction(HexMeshViewerClass);
        actionDAT4->setObjectName(QString::fromUtf8("actionDAT4"));
        actionDAT4_2 = new QAction(HexMeshViewerClass);
        actionDAT4_2->setObjectName(QString::fromUtf8("actionDAT4_2"));
        actionAppCCsolidNSDAT = new QAction(HexMeshViewerClass);
        actionAppCCsolidNSDAT->setObjectName(QString::fromUtf8("actionAppCCsolidNSDAT"));
        actionConsturctBSNCDAT = new QAction(HexMeshViewerClass);
        actionConsturctBSNCDAT->setObjectName(QString::fromUtf8("actionConsturctBSNCDAT"));
        actionDAT5 = new QAction(HexMeshViewerClass);
        actionDAT5->setObjectName(QString::fromUtf8("actionDAT5"));
        actionIsoline = new QAction(HexMeshViewerClass);
        actionIsoline->setObjectName(QString::fromUtf8("actionIsoline"));
        actionDatPoint = new QAction(HexMeshViewerClass);
        actionDatPoint->setObjectName(QString::fromUtf8("actionDatPoint"));
        actionDatPoint2 = new QAction(HexMeshViewerClass);
        actionDatPoint2->setObjectName(QString::fromUtf8("actionDatPoint2"));
        actionInterior_Point = new QAction(HexMeshViewerClass);
        actionInterior_Point->setObjectName(QString::fromUtf8("actionInterior_Point"));
        actionEdge_Point = new QAction(HexMeshViewerClass);
        actionEdge_Point->setObjectName(QString::fromUtf8("actionEdge_Point"));
        actionCorner_Point = new QAction(HexMeshViewerClass);
        actionCorner_Point->setObjectName(QString::fromUtf8("actionCorner_Point"));
        actionDAT5_1 = new QAction(HexMeshViewerClass);
        actionDAT5_1->setObjectName(QString::fromUtf8("actionDAT5_1"));
        actionError = new QAction(HexMeshViewerClass);
        actionError->setObjectName(QString::fromUtf8("actionError"));
        actionAdd_CC = new QAction(HexMeshViewerClass);
        actionAdd_CC->setObjectName(QString::fromUtf8("actionAdd_CC"));
        actionMesh = new QAction(HexMeshViewerClass);
        actionMesh->setObjectName(QString::fromUtf8("actionMesh"));
        actionMesh1 = new QAction(HexMeshViewerClass);
        actionMesh1->setObjectName(QString::fromUtf8("actionMesh1"));
        actionSort_Two_Mesh = new QAction(HexMeshViewerClass);
        actionSort_Two_Mesh->setObjectName(QString::fromUtf8("actionSort_Two_Mesh"));
        actionError1 = new QAction(HexMeshViewerClass);
        actionError1->setObjectName(QString::fromUtf8("actionError1"));
        actionCombine = new QAction(HexMeshViewerClass);
        actionCombine->setObjectName(QString::fromUtf8("actionCombine"));
        actionSingular1 = new QAction(HexMeshViewerClass);
        actionSingular1->setObjectName(QString::fromUtf8("actionSingular1"));
        actionSingular2 = new QAction(HexMeshViewerClass);
        actionSingular2->setObjectName(QString::fromUtf8("actionSingular2"));
        actionSingular3 = new QAction(HexMeshViewerClass);
        actionSingular3->setObjectName(QString::fromUtf8("actionSingular3"));
        actionView_singular = new QAction(HexMeshViewerClass);
        actionView_singular->setObjectName(QString::fromUtf8("actionView_singular"));
        actionSelect_one_point = new QAction(HexMeshViewerClass);
        actionSelect_one_point->setObjectName(QString::fromUtf8("actionSelect_one_point"));
        actionInitialModel = new QAction(HexMeshViewerClass);
        actionInitialModel->setObjectName(QString::fromUtf8("actionInitialModel"));
        action4_Point = new QAction(HexMeshViewerClass);
        action4_Point->setObjectName(QString::fromUtf8("action4_Point"));
        action6_Point = new QAction(HexMeshViewerClass);
        action6_Point->setObjectName(QString::fromUtf8("action6_Point"));
        action2n_Point = new QAction(HexMeshViewerClass);
        action2n_Point->setObjectName(QString::fromUtf8("action2n_Point"));
        actionSaveAXL = new QAction(HexMeshViewerClass);
        actionSaveAXL->setObjectName(QString::fromUtf8("actionSaveAXL"));
        action2n_Point_Line = new QAction(HexMeshViewerClass);
        action2n_Point_Line->setObjectName(QString::fromUtf8("action2n_Point_Line"));
        actionDelete_Cell = new QAction(HexMeshViewerClass);
        actionDelete_Cell->setObjectName(QString::fromUtf8("actionDelete_Cell"));
        actionCCSub_1 = new QAction(HexMeshViewerClass);
        actionCCSub_1->setObjectName(QString::fromUtf8("actionCCSub_1"));
        actionAppCCSolidDAT_1 = new QAction(HexMeshViewerClass);
        actionAppCCSolidDAT_1->setObjectName(QString::fromUtf8("actionAppCCSolidDAT_1"));
        actionConstructModel = new QAction(HexMeshViewerClass);
        actionConstructModel->setObjectName(QString::fromUtf8("actionConstructModel"));
        actionCalPDE = new QAction(HexMeshViewerClass);
        actionCalPDE->setObjectName(QString::fromUtf8("actionCalPDE"));
        actionConstructModel_1 = new QAction(HexMeshViewerClass);
        actionConstructModel_1->setObjectName(QString::fromUtf8("actionConstructModel_1"));
        actionBSplineSolidDAT = new QAction(HexMeshViewerClass);
        actionBSplineSolidDAT->setObjectName(QString::fromUtf8("actionBSplineSolidDAT"));
        actionExactSol = new QAction(HexMeshViewerClass);
        actionExactSol->setObjectName(QString::fromUtf8("actionExactSol"));
        actionERRORV = new QAction(HexMeshViewerClass);
        actionERRORV->setObjectName(QString::fromUtf8("actionERRORV"));
        actionTESTDraw = new QAction(HexMeshViewerClass);
        actionTESTDraw->setObjectName(QString::fromUtf8("actionTESTDraw"));
        actionSIMP = new QAction(HexMeshViewerClass);
        actionSIMP->setObjectName(QString::fromUtf8("actionSIMP"));
        actionSIMP1 = new QAction(HexMeshViewerClass);
        actionSIMP1->setObjectName(QString::fromUtf8("actionSIMP1"));
        actionNewSIMP = new QAction(HexMeshViewerClass);
        actionNewSIMP->setObjectName(QString::fromUtf8("actionNewSIMP"));
        actionDelete = new QAction(HexMeshViewerClass);
        actionDelete->setObjectName(QString::fromUtf8("actionDelete"));
        actionSplit1 = new QAction(HexMeshViewerClass);
        actionSplit1->setObjectName(QString::fromUtf8("actionSplit1"));
        actionCCSub_New = new QAction(HexMeshViewerClass);
        actionCCSub_New->setObjectName(QString::fromUtf8("actionCCSub_New"));
        actionConstructModel_1_new = new QAction(HexMeshViewerClass);
        actionConstructModel_1_new->setObjectName(QString::fromUtf8("actionConstructModel_1_new"));
        actionSIMP_new = new QAction(HexMeshViewerClass);
        actionSIMP_new->setObjectName(QString::fromUtf8("actionSIMP_new"));
        actionConstructModel_new = new QAction(HexMeshViewerClass);
        actionConstructModel_new->setObjectName(QString::fromUtf8("actionConstructModel_new"));
        actionNewSIMP_new = new QAction(HexMeshViewerClass);
        actionNewSIMP_new->setObjectName(QString::fromUtf8("actionNewSIMP_new"));
        actionPick_Point = new QAction(HexMeshViewerClass);
        actionPick_Point->setObjectName(QString::fromUtf8("actionPick_Point"));
        actionPick_Edge = new QAction(HexMeshViewerClass);
        actionPick_Edge->setObjectName(QString::fromUtf8("actionPick_Edge"));
        actionOutput_PickPoint = new QAction(HexMeshViewerClass);
        actionOutput_PickPoint->setObjectName(QString::fromUtf8("actionOutput_PickPoint"));
        actionRead_PickPoint = new QAction(HexMeshViewerClass);
        actionRead_PickPoint->setObjectName(QString::fromUtf8("actionRead_PickPoint"));
        actionPDESparse = new QAction(HexMeshViewerClass);
        actionPDESparse->setObjectName(QString::fromUtf8("actionPDESparse"));
        actionPDESparseOld = new QAction(HexMeshViewerClass);
        actionPDESparseOld->setObjectName(QString::fromUtf8("actionPDESparseOld"));
        actionPDESparseSIMP = new QAction(HexMeshViewerClass);
        actionPDESparseSIMP->setObjectName(QString::fromUtf8("actionPDESparseSIMP"));
        actionPDESpareLiner = new QAction(HexMeshViewerClass);
        actionPDESpareLiner->setObjectName(QString::fromUtf8("actionPDESpareLiner"));
        actionPDESpareLiner_2 = new QAction(HexMeshViewerClass);
        actionPDESpareLiner_2->setObjectName(QString::fromUtf8("actionPDESpareLiner_2"));
        actionIsoline1 = new QAction(HexMeshViewerClass);
        actionIsoline1->setObjectName(QString::fromUtf8("actionIsoline1"));
        actionIsoline2 = new QAction(HexMeshViewerClass);
        actionIsoline2->setObjectName(QString::fromUtf8("actionIsoline2"));
        actionOutput_PickedEdge = new QAction(HexMeshViewerClass);
        actionOutput_PickedEdge->setObjectName(QString::fromUtf8("actionOutput_PickedEdge"));
        actionRead_PickedEdge = new QAction(HexMeshViewerClass);
        actionRead_PickedEdge->setObjectName(QString::fromUtf8("actionRead_PickedEdge"));
        actionOpen_Model = new QAction(HexMeshViewerClass);
        actionOpen_Model->setObjectName(QString::fromUtf8("actionOpen_Model"));
        actionPick_Face = new QAction(HexMeshViewerClass);
        actionPick_Face->setObjectName(QString::fromUtf8("actionPick_Face"));
        actionOutput_PickedFace = new QAction(HexMeshViewerClass);
        actionOutput_PickedFace->setObjectName(QString::fromUtf8("actionOutput_PickedFace"));
        actionRead_PickedFace = new QAction(HexMeshViewerClass);
        actionRead_PickedFace->setObjectName(QString::fromUtf8("actionRead_PickedFace"));
        actionDelete_Face = new QAction(HexMeshViewerClass);
        actionDelete_Face->setObjectName(QString::fromUtf8("actionDelete_Face"));
        actionPick_Cell = new QAction(HexMeshViewerClass);
        actionPick_Cell->setObjectName(QString::fromUtf8("actionPick_Cell"));
        actionOutput_PickedAll = new QAction(HexMeshViewerClass);
        actionOutput_PickedAll->setObjectName(QString::fromUtf8("actionOutput_PickedAll"));
        actionRead_PickedAll = new QAction(HexMeshViewerClass);
        actionRead_PickedAll->setObjectName(QString::fromUtf8("actionRead_PickedAll"));
        actionDelete_Cell_2 = new QAction(HexMeshViewerClass);
        actionDelete_Cell_2->setObjectName(QString::fromUtf8("actionDelete_Cell_2"));
        actionSaveVTK = new QAction(HexMeshViewerClass);
        actionSaveVTK->setObjectName(QString::fromUtf8("actionSaveVTK"));
        actionOpenOBJ = new QAction(HexMeshViewerClass);
        actionOpenOBJ->setObjectName(QString::fromUtf8("actionOpenOBJ"));
        actionBeibdyDAT = new QAction(HexMeshViewerClass);
        actionBeibdyDAT->setObjectName(QString::fromUtf8("actionBeibdyDAT"));
        actionCheckCell = new QAction(HexMeshViewerClass);
        actionCheckCell->setObjectName(QString::fromUtf8("actionCheckCell"));
        actionPDELinerShow = new QAction(HexMeshViewerClass);
        actionPDELinerShow->setObjectName(QString::fromUtf8("actionPDELinerShow"));
        actionPreparePDE = new QAction(HexMeshViewerClass);
        actionPreparePDE->setObjectName(QString::fromUtf8("actionPreparePDE"));
        actionDrawBeisur = new QAction(HexMeshViewerClass);
        actionDrawBeisur->setObjectName(QString::fromUtf8("actionDrawBeisur"));
        actionDeleteBeisur = new QAction(HexMeshViewerClass);
        actionDeleteBeisur->setObjectName(QString::fromUtf8("actionDeleteBeisur"));
        actionOutputDraw = new QAction(HexMeshViewerClass);
        actionOutputDraw->setObjectName(QString::fromUtf8("actionOutputDraw"));
        actionReadDraw = new QAction(HexMeshViewerClass);
        actionReadDraw->setObjectName(QString::fromUtf8("actionReadDraw"));
        actionOpDraw = new QAction(HexMeshViewerClass);
        actionOpDraw->setObjectName(QString::fromUtf8("actionOpDraw"));
        actionShow_two_mesh = new QAction(HexMeshViewerClass);
        actionShow_two_mesh->setObjectName(QString::fromUtf8("actionShow_two_mesh"));
        actionSingularFace = new QAction(HexMeshViewerClass);
        actionSingularFace->setObjectName(QString::fromUtf8("actionSingularFace"));
        actionShow_two_mesh_singular = new QAction(HexMeshViewerClass);
        actionShow_two_mesh_singular->setObjectName(QString::fromUtf8("actionShow_two_mesh_singular"));
        actionDrawFrame = new QAction(HexMeshViewerClass);
        actionDrawFrame->setObjectName(QString::fromUtf8("actionDrawFrame"));
        actionPDESquareLiner_Muti = new QAction(HexMeshViewerClass);
        actionPDESquareLiner_Muti->setObjectName(QString::fromUtf8("actionPDESquareLiner_Muti"));
        actionSOLIDFLAT_FRAME = new QAction(HexMeshViewerClass);
        actionSOLIDFLAT_FRAME->setObjectName(QString::fromUtf8("actionSOLIDFLAT_FRAME"));
        actionDelete_Cell1 = new QAction(HexMeshViewerClass);
        actionDelete_Cell1->setObjectName(QString::fromUtf8("actionDelete_Cell1"));
        actionBeibdyDAT1 = new QAction(HexMeshViewerClass);
        actionBeibdyDAT1->setObjectName(QString::fromUtf8("actionBeibdyDAT1"));
        actionOpenVTK_Tri = new QAction(HexMeshViewerClass);
        actionOpenVTK_Tri->setObjectName(QString::fromUtf8("actionOpenVTK_Tri"));
        actionDrameFrame1 = new QAction(HexMeshViewerClass);
        actionDrameFrame1->setObjectName(QString::fromUtf8("actionDrameFrame1"));
        actionFrame = new QAction(HexMeshViewerClass);
        actionFrame->setObjectName(QString::fromUtf8("actionFrame"));
        actionOutput_MAXMIN = new QAction(HexMeshViewerClass);
        actionOutput_MAXMIN->setObjectName(QString::fromUtf8("actionOutput_MAXMIN"));
        actionSphereDraw = new QAction(HexMeshViewerClass);
        actionSphereDraw->setObjectName(QString::fromUtf8("actionSphereDraw"));
        actionErrorAndFrame = new QAction(HexMeshViewerClass);
        actionErrorAndFrame->setObjectName(QString::fromUtf8("actionErrorAndFrame"));
        actionFrame_2 = new QAction(HexMeshViewerClass);
        actionFrame_2->setObjectName(QString::fromUtf8("actionFrame_2"));
        actionGrab = new QAction(HexMeshViewerClass);
        actionGrab->setObjectName(QString::fromUtf8("actionGrab"));
        actionReadLine = new QAction(HexMeshViewerClass);
        actionReadLine->setObjectName(QString::fromUtf8("actionReadLine"));
        actionOutputline = new QAction(HexMeshViewerClass);
        actionOutputline->setObjectName(QString::fromUtf8("actionOutputline"));
        actionOpenVtk_smooth = new QAction(HexMeshViewerClass);
        actionOpenVtk_smooth->setObjectName(QString::fromUtf8("actionOpenVtk_smooth"));
        actionTisu = new QAction(HexMeshViewerClass);
        actionTisu->setObjectName(QString::fromUtf8("actionTisu"));
        actionFrameTisu = new QAction(HexMeshViewerClass);
        actionFrameTisu->setObjectName(QString::fromUtf8("actionFrameTisu"));
        actionOutputCSV = new QAction(HexMeshViewerClass);
        actionOutputCSV->setObjectName(QString::fromUtf8("actionOutputCSV"));
        actionReadCSV = new QAction(HexMeshViewerClass);
        actionReadCSV->setObjectName(QString::fromUtf8("actionReadCSV"));
        actionSmooth = new QAction(HexMeshViewerClass);
        actionSmooth->setObjectName(QString::fromUtf8("actionSmooth"));
        actionBezierLine = new QAction(HexMeshViewerClass);
        actionBezierLine->setObjectName(QString::fromUtf8("actionBezierLine"));
        actionQuadCC_Crease = new QAction(HexMeshViewerClass);
        actionQuadCC_Crease->setObjectName(QString::fromUtf8("actionQuadCC_Crease"));
        actionQuadV = new QAction(HexMeshViewerClass);
        actionQuadV->setObjectName(QString::fromUtf8("actionQuadV"));
        actionSetQuad1 = new QAction(HexMeshViewerClass);
        actionSetQuad1->setObjectName(QString::fromUtf8("actionSetQuad1"));
        actionShowTwoQuad = new QAction(HexMeshViewerClass);
        actionShowTwoQuad->setObjectName(QString::fromUtf8("actionShowTwoQuad"));
        actionPick_Point_2 = new QAction(HexMeshViewerClass);
        actionPick_Point_2->setObjectName(QString::fromUtf8("actionPick_Point_2"));
        actionSetFrame = new QAction(HexMeshViewerClass);
        actionSetFrame->setObjectName(QString::fromUtf8("actionSetFrame"));
        actionShowFrame = new QAction(HexMeshViewerClass);
        actionShowFrame->setObjectName(QString::fromUtf8("actionShowFrame"));
        actionShowQuad = new QAction(HexMeshViewerClass);
        actionShowQuad->setObjectName(QString::fromUtf8("actionShowQuad"));
        actionPick_curve = new QAction(HexMeshViewerClass);
        actionPick_curve->setObjectName(QString::fromUtf8("actionPick_curve"));
        actionOutput_curve = new QAction(HexMeshViewerClass);
        actionOutput_curve->setObjectName(QString::fromUtf8("actionOutput_curve"));
        actionRead_curve = new QAction(HexMeshViewerClass);
        actionRead_curve->setObjectName(QString::fromUtf8("actionRead_curve"));
        actionBezierBDY = new QAction(HexMeshViewerClass);
        actionBezierBDY->setObjectName(QString::fromUtf8("actionBezierBDY"));
        actionBezierSharp = new QAction(HexMeshViewerClass);
        actionBezierSharp->setObjectName(QString::fromUtf8("actionBezierSharp"));
        actionCheckbei = new QAction(HexMeshViewerClass);
        actionCheckbei->setObjectName(QString::fromUtf8("actionCheckbei"));
        actionClear_edge = new QAction(HexMeshViewerClass);
        actionClear_edge->setObjectName(QString::fromUtf8("actionClear_edge"));
        actionDATonly = new QAction(HexMeshViewerClass);
        actionDATonly->setObjectName(QString::fromUtf8("actionDATonly"));
        actionAdd_HexMesh = new QAction(HexMeshViewerClass);
        actionAdd_HexMesh->setObjectName(QString::fromUtf8("actionAdd_HexMesh"));
        actionBezierSharp1 = new QAction(HexMeshViewerClass);
        actionBezierSharp1->setObjectName(QString::fromUtf8("actionBezierSharp1"));
        actionDraw_BSvector = new QAction(HexMeshViewerClass);
        actionDraw_BSvector->setObjectName(QString::fromUtf8("actionDraw_BSvector"));
        actionTransformation = new QAction(HexMeshViewerClass);
        actionTransformation->setObjectName(QString::fromUtf8("actionTransformation"));
        actionX = new QAction(HexMeshViewerClass);
        actionX->setObjectName(QString::fromUtf8("actionX"));
        actionX_2 = new QAction(HexMeshViewerClass);
        actionX_2->setObjectName(QString::fromUtf8("actionX_2"));
        actionZ = new QAction(HexMeshViewerClass);
        actionZ->setObjectName(QString::fromUtf8("actionZ"));
        actionZ_2 = new QAction(HexMeshViewerClass);
        actionZ_2->setObjectName(QString::fromUtf8("actionZ_2"));
        actionAngle = new QAction(HexMeshViewerClass);
        actionAngle->setObjectName(QString::fromUtf8("actionAngle"));
        actionAngle_2 = new QAction(HexMeshViewerClass);
        actionAngle_2->setObjectName(QString::fromUtf8("actionAngle_2"));
        actionScale = new QAction(HexMeshViewerClass);
        actionScale->setObjectName(QString::fromUtf8("actionScale"));
        actionScale_2 = new QAction(HexMeshViewerClass);
        actionScale_2->setObjectName(QString::fromUtf8("actionScale_2"));
        actionDraw_framevector = new QAction(HexMeshViewerClass);
        actionDraw_framevector->setObjectName(QString::fromUtf8("actionDraw_framevector"));
        actionRead_PickedEdge1 = new QAction(HexMeshViewerClass);
        actionRead_PickedEdge1->setObjectName(QString::fromUtf8("actionRead_PickedEdge1"));
        actionOpenBezier = new QAction(HexMeshViewerClass);
        actionOpenBezier->setObjectName(QString::fromUtf8("actionOpenBezier"));
        actionOpenBezier1 = new QAction(HexMeshViewerClass);
        actionOpenBezier1->setObjectName(QString::fromUtf8("actionOpenBezier1"));
        actionOpenBezier2 = new QAction(HexMeshViewerClass);
        actionOpenBezier2->setObjectName(QString::fromUtf8("actionOpenBezier2"));
        actionOpenBezierNew = new QAction(HexMeshViewerClass);
        actionOpenBezierNew->setObjectName(QString::fromUtf8("actionOpenBezierNew"));
        actionActionCalPDE1 = new QAction(HexMeshViewerClass);
        actionActionCalPDE1->setObjectName(QString::fromUtf8("actionActionCalPDE1"));
        actionVervexNum = new QAction(HexMeshViewerClass);
        actionVervexNum->setObjectName(QString::fromUtf8("actionVervexNum"));
        actionReadXJ = new QAction(HexMeshViewerClass);
        actionReadXJ->setObjectName(QString::fromUtf8("actionReadXJ"));
        actionALL_LINES1 = new QAction(HexMeshViewerClass);
        actionALL_LINES1->setObjectName(QString::fromUtf8("actionALL_LINES1"));
        actionReadMSH = new QAction(HexMeshViewerClass);
        actionReadMSH->setObjectName(QString::fromUtf8("actionReadMSH"));
        actionPICKFACE = new QAction(HexMeshViewerClass);
        actionPICKFACE->setObjectName(QString::fromUtf8("actionPICKFACE"));
        centralWidget = new QWidget(HexMeshViewerClass);
        centralWidget->setObjectName(QString::fromUtf8("centralWidget"));
        gridLayout = new QGridLayout(centralWidget);
        gridLayout->setSpacing(6);
        gridLayout->setContentsMargins(11, 11, 11, 11);
        gridLayout->setObjectName(QString::fromUtf8("gridLayout"));
        widget_2 = new QWidget(centralWidget);
        widget_2->setObjectName(QString::fromUtf8("widget_2"));
        gridLayout_2 = new QGridLayout(widget_2);
        gridLayout_2->setSpacing(6);
        gridLayout_2->setContentsMargins(11, 11, 11, 11);
        gridLayout_2->setObjectName(QString::fromUtf8("gridLayout_2"));
        widget_3 = new CuttingWidget(widget_2);
        widget_3->setObjectName(QString::fromUtf8("widget_3"));
        verticalLayout = new QVBoxLayout(widget_3);
        verticalLayout->setSpacing(6);
        verticalLayout->setContentsMargins(11, 11, 11, 11);
        verticalLayout->setObjectName(QString::fromUtf8("verticalLayout"));

        gridLayout_2->addWidget(widget_3, 0, 0, 1, 1);

        widget = new QGLViewerWidget(widget_2);
        widget->setObjectName(QString::fromUtf8("widget"));

        gridLayout_2->addWidget(widget, 0, 1, 1, 1);

        gridLayout_2->setColumnStretch(0, 2);
        gridLayout_2->setColumnStretch(1, 5);

        gridLayout->addWidget(widget_2, 0, 0, 1, 1);

        HexMeshViewerClass->setCentralWidget(centralWidget);
        menuBar = new QMenuBar(HexMeshViewerClass);
        menuBar->setObjectName(QString::fromUtf8("menuBar"));
        menuBar->setGeometry(QRect(0, 0, 1076, 23));
        menuFile = new QMenu(menuBar);
        menuFile->setObjectName(QString::fromUtf8("menuFile"));
        menuFunction = new QMenu(menuBar);
        menuFunction->setObjectName(QString::fromUtf8("menuFunction"));
        menuFunction_2 = new QMenu(menuBar);
        menuFunction_2->setObjectName(QString::fromUtf8("menuFunction_2"));
        menuOther = new QMenu(menuBar);
        menuOther->setObjectName(QString::fromUtf8("menuOther"));
        menuMore = new QMenu(menuBar);
        menuMore->setObjectName(QString::fromUtf8("menuMore"));
        menu2n_Point = new QMenu(menuBar);
        menu2n_Point->setObjectName(QString::fromUtf8("menu2n_Point"));
        menuPDE = new QMenu(menuBar);
        menuPDE->setObjectName(QString::fromUtf8("menuPDE"));
        menuPDE_Extra = new QMenu(menuBar);
        menuPDE_Extra->setObjectName(QString::fromUtf8("menuPDE_Extra"));
        menuExtra = new QMenu(menuBar);
        menuExtra->setObjectName(QString::fromUtf8("menuExtra"));
        menuLine = new QMenu(menuBar);
        menuLine->setObjectName(QString::fromUtf8("menuLine"));
        menuMove = new QMenu(menuBar);
        menuMove->setObjectName(QString::fromUtf8("menuMove"));
        HexMeshViewerClass->setMenuBar(menuBar);
        mainToolBar = new QToolBar(HexMeshViewerClass);
        mainToolBar->setObjectName(QString::fromUtf8("mainToolBar"));
        HexMeshViewerClass->addToolBar(Qt::TopToolBarArea, mainToolBar);
        statusBar = new QStatusBar(HexMeshViewerClass);
        statusBar->setObjectName(QString::fromUtf8("statusBar"));
        HexMeshViewerClass->setStatusBar(statusBar);

        menuBar->addAction(menuFile->menuAction());
        menuBar->addAction(menuFunction->menuAction());
        menuBar->addAction(menuFunction_2->menuAction());
        menuBar->addAction(menuOther->menuAction());
        menuBar->addAction(menuMore->menuAction());
        menuBar->addAction(menu2n_Point->menuAction());
        menuBar->addAction(menuPDE->menuAction());
        menuBar->addAction(menuPDE_Extra->menuAction());
        menuBar->addAction(menuExtra->menuAction());
        menuBar->addAction(menuLine->menuAction());
        menuBar->addAction(menuMove->menuAction());
        menuFile->addAction(actionOpen);
        menuFile->addSeparator();
        menuFile->addAction(actionSave);
        menuFile->addSeparator();
        menuFile->addAction(actionSaveDAT);
        menuFile->addSeparator();
        menuFile->addAction(actionSaveAXL);
        menuFile->addSeparator();
        menuFile->addAction(actionOpenOBJ);
        menuFile->addSeparator();
        menuFile->addAction(actionOpenVTK_Tri);
        menuFile->addSeparator();
        menuFile->addAction(actionOpenVtk_smooth);
        menuFile->addSeparator();
        menuFile->addAction(actionClear_edge);
        menuFile->addSeparator();
        menuFile->addAction(actionAdd_HexMesh);
        menuFile->addSeparator();
        menuFile->addAction(actionTransformation);
        menuFile->addSeparator();
        menuFile->addAction(actionOpenBezier);
        menuFile->addSeparator();
        menuFile->addAction(actionOpenBezier1);
        menuFile->addSeparator();
        menuFile->addAction(actionOpenBezier2);
        menuFile->addSeparator();
        menuFile->addAction(actionOpenBezierNew);
        menuFile->addSeparator();
        menuFile->addAction(actionReadXJ);
        menuFile->addSeparator();
        menuFile->addAction(actionALL_LINES1);
        menuFunction->addAction(actionWIRE_FRAME);
        menuFunction->addSeparator();
        menuFunction->addAction(actionFLAT_LINES);
        menuFunction->addSeparator();
        menuFunction->addAction(actionSOLID_FLAT);
        menuFunction->addSeparator();
        menuFunction->addAction(actionALL_LINES);
        menuFunction->addSeparator();
        menuFunction->addAction(actionALL_POINTS);
        menuFunction->addSeparator();
        menuFunction->addAction(actionALL_POLY);
        menuFunction->addSeparator();
        menuFunction->addAction(actionVOLUME_TEXTURE);
        menuFunction->addSeparator();
        menuFunction->addAction(actionDAT1);
        menuFunction->addSeparator();
        menuFunction->addAction(actionDAT2);
        menuFunction->addSeparator();
        menuFunction->addAction(actionDAT3);
        menuFunction->addSeparator();
        menuFunction->addAction(actionDAT4_2);
        menuFunction->addSeparator();
        menuFunction->addAction(actionDAT5);
        menuFunction->addSeparator();
        menuFunction->addAction(actionDAT5_1);
        menuFunction->addSeparator();
        menuFunction->addAction(actionIsoline);
        menuFunction->addSeparator();
        menuFunction->addAction(actionIsoline1);
        menuFunction->addSeparator();
        menuFunction->addAction(actionIsoline2);
        menuFunction->addSeparator();
        menuFunction->addAction(actionDatPoint);
        menuFunction->addSeparator();
        menuFunction->addAction(actionDatPoint2);
        menuFunction->addSeparator();
        menuFunction->addAction(actionError);
        menuFunction->addSeparator();
        menuFunction->addAction(actionError1);
        menuFunction->addSeparator();
        menuFunction->addAction(actionSOLIDFLAT_FRAME);
        menuFunction->addAction(actionDATonly);
        menuFunction_2->addAction(actionClear_ALL);
        menuFunction_2->addSeparator();
        menuFunction_2->addAction(actionSubdvision);
        menuFunction_2->addSeparator();
        menuFunction_2->addAction(actionSubdvision2);
        menuFunction_2->addSeparator();
        menuFunction_2->addAction(actionSubdvision3);
        menuFunction_2->addSeparator();
        menuFunction_2->addAction(actionSubdvision4);
        menuFunction_2->addSeparator();
        menuFunction_2->addAction(actionSubdvision5);
        menuFunction_2->addSeparator();
        menuFunction_2->addAction(actionSubdvision6);
        menuFunction_2->addSeparator();
        menuFunction_2->addAction(actionSubdvision7);
        menuFunction_2->addSeparator();
        menuFunction_2->addAction(actionAdd_Mesh);
        menuFunction_2->addSeparator();
        menuFunction_2->addAction(actionApproximationCC);
        menuFunction_2->addSeparator();
        menuFunction_2->addAction(actionConstructBezier);
        menuFunction_2->addSeparator();
        menuFunction_2->addAction(actionAppCCSolid);
        menuFunction_2->addSeparator();
        menuFunction_2->addAction(actionConstructBS);
        menuFunction_2->addSeparator();
        menuFunction_2->addAction(actionAppCCSolidDAT);
        menuFunction_2->addSeparator();
        menuFunction_2->addAction(actionConstructBSDAT);
        menuFunction_2->addSeparator();
        menuFunction_2->addAction(actionCompare);
        menuFunction_2->addSeparator();
        menuFunction_2->addAction(actionAppCCSolidNoS);
        menuFunction_2->addSeparator();
        menuFunction_2->addAction(actionConstructBSNoS);
        menuFunction_2->addSeparator();
        menuFunction_2->addAction(actionAppCCsolidNSDAT);
        menuFunction_2->addSeparator();
        menuFunction_2->addAction(actionConsturctBSNCDAT);
        menuFunction_2->addSeparator();
        menuFunction_2->addAction(actionCCSub_1);
        menuFunction_2->addSeparator();
        menuFunction_2->addAction(actionAppCCSolidDAT_1);
        menuOther->addAction(actionSplit);
        menuOther->addSeparator();
        menuOther->addAction(actionSplit1);
        menuOther->addSeparator();
        menuOther->addAction(actionShow_Oriv);
        menuOther->addSeparator();
        menuOther->addAction(actionShow_BB);
        menuOther->addSeparator();
        menuOther->addAction(actionShow_OriBB);
        menuOther->addSeparator();
        menuOther->addAction(actionShow_OvandV);
        menuOther->addSeparator();
        menuOther->addAction(actionShow_SE_and_SV);
        menuOther->addSeparator();
        menuOther->addAction(actionShi_xiong);
        menuOther->addSeparator();
        menuOther->addAction(actionShow_BeiV);
        menuOther->addSeparator();
        menuOther->addAction(actionShow_Beiframe);
        menuOther->addSeparator();
        menuOther->addAction(actionShow_Beiflatline);
        menuOther->addSeparator();
        menuOther->addAction(actionInterior_Point);
        menuOther->addSeparator();
        menuOther->addAction(actionEdge_Point);
        menuOther->addSeparator();
        menuOther->addAction(actionCorner_Point);
        menuOther->addSeparator();
        menuOther->addAction(actionPICKFACE);
        menuMore->addAction(actionAdd_CC);
        menuMore->addSeparator();
        menuMore->addAction(actionMesh);
        menuMore->addSeparator();
        menuMore->addAction(actionMesh1);
        menuMore->addSeparator();
        menuMore->addAction(actionSort_Two_Mesh);
        menuMore->addSeparator();
        menuMore->addAction(actionCombine);
        menuMore->addSeparator();
        menuMore->addAction(actionView_singular);
        menuMore->addSeparator();
        menuMore->addAction(actionSelect_one_point);
        menuMore->addSeparator();
        menuMore->addAction(actionDelete_Cell);
        menuMore->addSeparator();
        menuMore->addAction(actionDelete_Cell1);
        menuMore->addSeparator();
        menuMore->addAction(actionCCSub_New);
        menuMore->addSeparator();
        menuMore->addAction(actionShow_two_mesh);
        menuMore->addSeparator();
        menuMore->addAction(actionShow_two_mesh_singular);
        menuMore->addSeparator();
        menu2n_Point->addAction(actionInitialModel);
        menu2n_Point->addSeparator();
        menu2n_Point->addAction(action4_Point);
        menu2n_Point->addSeparator();
        menu2n_Point->addAction(action6_Point);
        menu2n_Point->addSeparator();
        menu2n_Point->addAction(action2n_Point_Line);
        menu2n_Point->addSeparator();
        menu2n_Point->addAction(action2n_Point);
        menu2n_Point->addSeparator();
        menu2n_Point->addAction(actionActionCalPDE1);
        menuPDE->addAction(actionConstructModel);
        menuPDE->addSeparator();
        menuPDE->addAction(actionCalPDE);
        menuPDE->addSeparator();
        menuPDE->addAction(actionConstructModel_1);
        menuPDE->addSeparator();
        menuPDE->addAction(actionBSplineSolidDAT);
        menuPDE->addSeparator();
        menuPDE->addAction(actionExactSol);
        menuPDE->addSeparator();
        menuPDE->addAction(actionERRORV);
        menuPDE->addSeparator();
        menuPDE->addAction(actionTESTDraw);
        menuPDE->addSeparator();
        menuPDE->addAction(actionSIMP);
        menuPDE->addSeparator();
        menuPDE->addAction(actionSIMP1);
        menuPDE->addSeparator();
        menuPDE->addAction(actionNewSIMP);
        menuPDE->addSeparator();
        menuPDE->addAction(actionDelete);
        menuPDE->addSeparator();
        menuPDE->addAction(actionConstructModel_1_new);
        menuPDE->addSeparator();
        menuPDE->addAction(actionSIMP_new);
        menuPDE->addSeparator();
        menuPDE->addAction(actionConstructModel_new);
        menuPDE->addSeparator();
        menuPDE->addAction(actionNewSIMP_new);
        menuPDE->addSeparator();
        menuPDE->addAction(actionPick_Point);
        menuPDE->addSeparator();
        menuPDE->addAction(actionOutput_PickPoint);
        menuPDE->addSeparator();
        menuPDE->addAction(actionRead_PickPoint);
        menuPDE->addSeparator();
        menuPDE->addAction(actionPick_Edge);
        menuPDE->addSeparator();
        menuPDE->addAction(actionPDESparse);
        menuPDE->addSeparator();
        menuPDE->addAction(actionPDESparseOld);
        menuPDE->addAction(actionPDESparseSIMP);
        menuPDE_Extra->addAction(actionPDESpareLiner);
        menuPDE_Extra->addSeparator();
        menuPDE_Extra->addAction(actionPDESpareLiner_2);
        menuPDE_Extra->addSeparator();
        menuPDE_Extra->addAction(actionPDELinerShow);
        menuPDE_Extra->addSeparator();
        menuPDE_Extra->addAction(actionPDESquareLiner_Muti);
        menuPDE_Extra->addSeparator();
        menuPDE_Extra->addAction(actionOutput_PickedEdge);
        menuPDE_Extra->addSeparator();
        menuPDE_Extra->addAction(actionRead_PickedEdge);
        menuPDE_Extra->addSeparator();
        menuPDE_Extra->addAction(actionOpen_Model);
        menuPDE_Extra->addSeparator();
        menuPDE_Extra->addAction(actionPick_Face);
        menuPDE_Extra->addSeparator();
        menuPDE_Extra->addAction(actionDelete_Face);
        menuPDE_Extra->addSeparator();
        menuPDE_Extra->addAction(actionOutput_PickedFace);
        menuPDE_Extra->addSeparator();
        menuPDE_Extra->addAction(actionRead_PickedFace);
        menuPDE_Extra->addSeparator();
        menuPDE_Extra->addAction(actionPick_Cell);
        menuPDE_Extra->addSeparator();
        menuPDE_Extra->addAction(actionOutput_PickedAll);
        menuPDE_Extra->addSeparator();
        menuPDE_Extra->addAction(actionRead_PickedAll);
        menuPDE_Extra->addSeparator();
        menuPDE_Extra->addAction(actionDelete_Cell_2);
        menuPDE_Extra->addSeparator();
        menuPDE_Extra->addAction(actionSmooth);
        menuPDE_Extra->addSeparator();
        menuPDE_Extra->addAction(actionPick_curve);
        menuPDE_Extra->addSeparator();
        menuPDE_Extra->addAction(actionOutput_curve);
        menuPDE_Extra->addSeparator();
        menuPDE_Extra->addAction(actionRead_curve);
        menuPDE_Extra->addSeparator();
        menuPDE_Extra->addAction(actionBezierBDY);
        menuPDE_Extra->addSeparator();
        menuPDE_Extra->addAction(actionBezierSharp);
        menuPDE_Extra->addAction(actionCheckbei);
        menuExtra->addAction(actionBeibdyDAT);
        menuExtra->addSeparator();
        menuExtra->addAction(actionBeibdyDAT1);
        menuExtra->addSeparator();
        menuExtra->addAction(actionCheckCell);
        menuExtra->addSeparator();
        menuExtra->addAction(actionPreparePDE);
        menuExtra->addSeparator();
        menuExtra->addAction(actionDrawBeisur);
        menuExtra->addSeparator();
        menuExtra->addAction(actionDeleteBeisur);
        menuExtra->addSeparator();
        menuExtra->addAction(actionOutputDraw);
        menuExtra->addSeparator();
        menuExtra->addAction(actionReadDraw);
        menuExtra->addSeparator();
        menuExtra->addAction(actionOpDraw);
        menuExtra->addSeparator();
        menuExtra->addAction(actionSingularFace);
        menuExtra->addSeparator();
        menuExtra->addAction(actionDrawFrame);
        menuExtra->addSeparator();
        menuExtra->addAction(actionDrameFrame1);
        menuExtra->addSeparator();
        menuExtra->addAction(actionFrame);
        menuExtra->addSeparator();
        menuExtra->addAction(actionOutput_MAXMIN);
        menuExtra->addSeparator();
        menuExtra->addAction(actionSphereDraw);
        menuExtra->addSeparator();
        menuExtra->addAction(actionErrorAndFrame);
        menuExtra->addSeparator();
        menuExtra->addAction(actionFrame_2);
        menuExtra->addSeparator();
        menuExtra->addAction(actionGrab);
        menuExtra->addSeparator();
        menuExtra->addAction(actionTisu);
        menuExtra->addSeparator();
        menuExtra->addAction(actionFrameTisu);
        menuExtra->addSeparator();
        menuExtra->addAction(actionOutputCSV);
        menuExtra->addAction(actionReadCSV);
        menuLine->addAction(actionReadLine);
        menuLine->addSeparator();
        menuLine->addAction(actionOutputline);
        menuLine->addSeparator();
        menuLine->addAction(actionBezierLine);
        menuLine->addSeparator();
        menuLine->addAction(actionQuadCC_Crease);
        menuLine->addSeparator();
        menuLine->addAction(actionShowQuad);
        menuLine->addSeparator();
        menuLine->addAction(actionQuadV);
        menuLine->addSeparator();
        menuLine->addAction(actionSetQuad1);
        menuLine->addSeparator();
        menuLine->addAction(actionShowTwoQuad);
        menuLine->addSeparator();
        menuLine->addAction(actionPick_Point_2);
        menuLine->addSeparator();
        menuLine->addAction(actionSetFrame);
        menuLine->addSeparator();
        menuLine->addAction(actionShowFrame);
        menuLine->addSeparator();
        menuLine->addAction(actionBezierSharp1);
        menuLine->addSeparator();
        menuLine->addAction(actionDraw_BSvector);
        menuLine->addSeparator();
        menuLine->addAction(actionDraw_framevector);
        menuLine->addSeparator();
        menuLine->addAction(actionRead_PickedEdge1);
        menuMove->addAction(actionX);
        menuMove->addSeparator();
        menuMove->addAction(actionX_2);
        menuMove->addSeparator();
        menuMove->addAction(actionZ);
        menuMove->addSeparator();
        menuMove->addAction(actionZ_2);
        menuMove->addSeparator();
        menuMove->addAction(actionAngle);
        menuMove->addSeparator();
        menuMove->addAction(actionAngle_2);
        menuMove->addSeparator();
        menuMove->addAction(actionScale);
        menuMove->addSeparator();
        menuMove->addAction(actionScale_2);

        retranslateUi(HexMeshViewerClass);

        QMetaObject::connectSlotsByName(HexMeshViewerClass);
    } // setupUi

    void retranslateUi(QMainWindow *HexMeshViewerClass)
    {
        HexMeshViewerClass->setWindowTitle(QApplication::translate("HexMeshViewerClass", "HexMeshViewer", nullptr));
        actionOpen->setText(QApplication::translate("HexMeshViewerClass", "Open", nullptr));
        actionSave->setText(QApplication::translate("HexMeshViewerClass", "Save", nullptr));
        actionWIRE_FRAME->setText(QApplication::translate("HexMeshViewerClass", "WIRE_FRAME", nullptr));
        actionFLAT_LINES->setText(QApplication::translate("HexMeshViewerClass", "FLAT_LINES", nullptr));
        actionSOLID_FLAT->setText(QApplication::translate("HexMeshViewerClass", "SOLID_FLAT", nullptr));
        actionALL_LINES->setText(QApplication::translate("HexMeshViewerClass", "ALL_LINES", nullptr));
        actionALL_POLY->setText(QApplication::translate("HexMeshViewerClass", "ALL_POLY", nullptr));
        actionSubdvision->setText(QApplication::translate("HexMeshViewerClass", "Subdvision1", nullptr));
        actionALL_POINTS->setText(QApplication::translate("HexMeshViewerClass", "ALL_POINTS", nullptr));
        actionClear_ALL->setText(QApplication::translate("HexMeshViewerClass", "Clear All", nullptr));
        actionSubdvision2->setText(QApplication::translate("HexMeshViewerClass", "Subdvision2", nullptr));
        actionAdd_Mesh->setText(QApplication::translate("HexMeshViewerClass", "Add Mesh", nullptr));
        actionSubdvision3->setText(QApplication::translate("HexMeshViewerClass", "Subdvision3", nullptr));
        actionSubdvision4->setText(QApplication::translate("HexMeshViewerClass", "Subdvision4", nullptr));
        actionVOLUME_TEXTURE->setText(QApplication::translate("HexMeshViewerClass", "VOLUME_TEXTURE", nullptr));
        actionSubdvision5->setText(QApplication::translate("HexMeshViewerClass", "Subdvision5", nullptr));
        actionSubdvision6->setText(QApplication::translate("HexMeshViewerClass", "Subdvision6", nullptr));
        actionSplit->setText(QApplication::translate("HexMeshViewerClass", "Split", nullptr));
        actionShow_Oriv->setText(QApplication::translate("HexMeshViewerClass", "Show Oriv", nullptr));
        actionShow_BB->setText(QApplication::translate("HexMeshViewerClass", "Show BB", nullptr));
        actionShow_OriBB->setText(QApplication::translate("HexMeshViewerClass", "Show OriBB", nullptr));
        actionShow_OvandV->setText(QApplication::translate("HexMeshViewerClass", "Show OvandV", nullptr));
        actionSubdvision7->setText(QApplication::translate("HexMeshViewerClass", "Subdvision7", nullptr));
        actionShow_SE_and_SV->setText(QApplication::translate("HexMeshViewerClass", "Show SE and SV", nullptr));
        actionShi_xiong->setText(QApplication::translate("HexMeshViewerClass", "Show Singular", nullptr));
        actionOpenVTK->setText(QApplication::translate("HexMeshViewerClass", "OpenVTK", nullptr));
        actionApproximationCC->setText(QApplication::translate("HexMeshViewerClass", "ApproximateCC", nullptr));
        actionShow_BeiV->setText(QApplication::translate("HexMeshViewerClass", "Show BeiV", nullptr));
        actionShow_Beiframe->setText(QApplication::translate("HexMeshViewerClass", "Show Beiframe", nullptr));
        actionShow_Beiflatline->setText(QApplication::translate("HexMeshViewerClass", "Show Beiflatline", nullptr));
        actionConstructBezier->setText(QApplication::translate("HexMeshViewerClass", "ConstructBezier", nullptr));
        actionAppCCSolid->setText(QApplication::translate("HexMeshViewerClass", "AppCCSolid", nullptr));
        actionConstructBS->setText(QApplication::translate("HexMeshViewerClass", "ConstructBS", nullptr));
        actionSaveDAT->setText(QApplication::translate("HexMeshViewerClass", "SaveDAT", nullptr));
        actionAppCCSolidDAT->setText(QApplication::translate("HexMeshViewerClass", "AppCCSolidDAT", nullptr));
        actionConstructBSDAT->setText(QApplication::translate("HexMeshViewerClass", "ConstructBSDAT", nullptr));
        actionCompare->setText(QApplication::translate("HexMeshViewerClass", "Compare", nullptr));
        actionAppCCSolidNoS->setText(QApplication::translate("HexMeshViewerClass", "AppCCSolidNoS", nullptr));
        actionConstructBSNoS->setText(QApplication::translate("HexMeshViewerClass", "ConstructBSNoS", nullptr));
        actionDAT1->setText(QApplication::translate("HexMeshViewerClass", "DAT1", nullptr));
        actionDAT2->setText(QApplication::translate("HexMeshViewerClass", "DAT2", nullptr));
        actionDAT3->setText(QApplication::translate("HexMeshViewerClass", "DAT3", nullptr));
        actionDAT1_2->setText(QApplication::translate("HexMeshViewerClass", "DAT1", nullptr));
        actionDAT2_2->setText(QApplication::translate("HexMeshViewerClass", "DAT2", nullptr));
        actionDAT3_2->setText(QApplication::translate("HexMeshViewerClass", "DAT3", nullptr));
        actionDAT4->setText(QApplication::translate("HexMeshViewerClass", "DAT4", nullptr));
        actionDAT4_2->setText(QApplication::translate("HexMeshViewerClass", "DAT4", nullptr));
        actionAppCCsolidNSDAT->setText(QApplication::translate("HexMeshViewerClass", "AppCCsolidNSDAT", nullptr));
        actionConsturctBSNCDAT->setText(QApplication::translate("HexMeshViewerClass", "ConsturctBSNCDAT", nullptr));
        actionDAT5->setText(QApplication::translate("HexMeshViewerClass", "DAT5", nullptr));
        actionIsoline->setText(QApplication::translate("HexMeshViewerClass", "Isoline", nullptr));
        actionDatPoint->setText(QApplication::translate("HexMeshViewerClass", "DatPoint1", nullptr));
        actionDatPoint2->setText(QApplication::translate("HexMeshViewerClass", "DatPoint2", nullptr));
        actionInterior_Point->setText(QApplication::translate("HexMeshViewerClass", "Interior Point", nullptr));
        actionEdge_Point->setText(QApplication::translate("HexMeshViewerClass", "Edge Point", nullptr));
        actionCorner_Point->setText(QApplication::translate("HexMeshViewerClass", "Corner Point", nullptr));
        actionDAT5_1->setText(QApplication::translate("HexMeshViewerClass", "DAT5_1", nullptr));
        actionError->setText(QApplication::translate("HexMeshViewerClass", "Error", nullptr));
        actionAdd_CC->setText(QApplication::translate("HexMeshViewerClass", "Add CC", nullptr));
        actionMesh->setText(QApplication::translate("HexMeshViewerClass", "Mesh", nullptr));
        actionMesh1->setText(QApplication::translate("HexMeshViewerClass", "Mesh1", nullptr));
        actionSort_Two_Mesh->setText(QApplication::translate("HexMeshViewerClass", "Sort Two Mesh", nullptr));
        actionError1->setText(QApplication::translate("HexMeshViewerClass", "Error1", nullptr));
        actionCombine->setText(QApplication::translate("HexMeshViewerClass", "Combine", nullptr));
        actionSingular1->setText(QApplication::translate("HexMeshViewerClass", "Singular1", nullptr));
        actionSingular2->setText(QApplication::translate("HexMeshViewerClass", "Singular2", nullptr));
        actionSingular3->setText(QApplication::translate("HexMeshViewerClass", "Singular3", nullptr));
        actionView_singular->setText(QApplication::translate("HexMeshViewerClass", "view_singular", nullptr));
        actionSelect_one_point->setText(QApplication::translate("HexMeshViewerClass", "select one point", nullptr));
        actionInitialModel->setText(QApplication::translate("HexMeshViewerClass", "InitialModel", nullptr));
        action4_Point->setText(QApplication::translate("HexMeshViewerClass", "4-Point", nullptr));
        action6_Point->setText(QApplication::translate("HexMeshViewerClass", "6-Point", nullptr));
        action2n_Point->setText(QApplication::translate("HexMeshViewerClass", "2n-Point-Face", nullptr));
        actionSaveAXL->setText(QApplication::translate("HexMeshViewerClass", "SaveAXL", nullptr));
        action2n_Point_Line->setText(QApplication::translate("HexMeshViewerClass", "2n-Point-Line", nullptr));
        actionDelete_Cell->setText(QApplication::translate("HexMeshViewerClass", "Delete Cell", nullptr));
        actionCCSub_1->setText(QApplication::translate("HexMeshViewerClass", "CCSub_1", nullptr));
        actionAppCCSolidDAT_1->setText(QApplication::translate("HexMeshViewerClass", "ConstructBSDAT_1", nullptr));
        actionConstructModel->setText(QApplication::translate("HexMeshViewerClass", "ConstructModel", nullptr));
        actionCalPDE->setText(QApplication::translate("HexMeshViewerClass", "CalPDE", nullptr));
        actionConstructModel_1->setText(QApplication::translate("HexMeshViewerClass", "ConstructModel_1", nullptr));
        actionBSplineSolidDAT->setText(QApplication::translate("HexMeshViewerClass", "BSplineSolid", nullptr));
        actionExactSol->setText(QApplication::translate("HexMeshViewerClass", "ExactSol", nullptr));
        actionERRORV->setText(QApplication::translate("HexMeshViewerClass", "ERRORV", nullptr));
        actionTESTDraw->setText(QApplication::translate("HexMeshViewerClass", "TESTDraw", nullptr));
        actionSIMP->setText(QApplication::translate("HexMeshViewerClass", "SIMP", nullptr));
        actionSIMP1->setText(QApplication::translate("HexMeshViewerClass", "SIMP1", nullptr));
        actionNewSIMP->setText(QApplication::translate("HexMeshViewerClass", "NewSIMP", nullptr));
        actionDelete->setText(QApplication::translate("HexMeshViewerClass", "Delete", nullptr));
        actionSplit1->setText(QApplication::translate("HexMeshViewerClass", "Split1", nullptr));
        actionCCSub_New->setText(QApplication::translate("HexMeshViewerClass", "CCSub_New", nullptr));
        actionConstructModel_1_new->setText(QApplication::translate("HexMeshViewerClass", "ConstructModel_1_new", nullptr));
        actionSIMP_new->setText(QApplication::translate("HexMeshViewerClass", "SIMP_new", nullptr));
        actionConstructModel_new->setText(QApplication::translate("HexMeshViewerClass", "ConstructModel_new", nullptr));
        actionNewSIMP_new->setText(QApplication::translate("HexMeshViewerClass", "NewSIMP_new", nullptr));
        actionPick_Point->setText(QApplication::translate("HexMeshViewerClass", "Pick Point", nullptr));
        actionPick_Edge->setText(QApplication::translate("HexMeshViewerClass", "Pick Edge", nullptr));
        actionOutput_PickPoint->setText(QApplication::translate("HexMeshViewerClass", "Output PickPoint", nullptr));
        actionRead_PickPoint->setText(QApplication::translate("HexMeshViewerClass", "Read PickPoint", nullptr));
        actionPDESparse->setText(QApplication::translate("HexMeshViewerClass", "PDESparse", nullptr));
        actionPDESparseOld->setText(QApplication::translate("HexMeshViewerClass", "PDESparseOld", nullptr));
        actionPDESparseSIMP->setText(QApplication::translate("HexMeshViewerClass", "PDESparseSIMP", nullptr));
        actionPDESpareLiner->setText(QApplication::translate("HexMeshViewerClass", "PDELiner", nullptr));
        actionPDESpareLiner_2->setText(QApplication::translate("HexMeshViewerClass", "PDESpareLiner", nullptr));
        actionIsoline1->setText(QApplication::translate("HexMeshViewerClass", "Isoline1", nullptr));
        actionIsoline2->setText(QApplication::translate("HexMeshViewerClass", "Isoline2", nullptr));
        actionOutput_PickedEdge->setText(QApplication::translate("HexMeshViewerClass", "Output PickedEdge", nullptr));
        actionRead_PickedEdge->setText(QApplication::translate("HexMeshViewerClass", "Read PickedEdge", nullptr));
        actionOpen_Model->setText(QApplication::translate("HexMeshViewerClass", "Open Model", nullptr));
        actionPick_Face->setText(QApplication::translate("HexMeshViewerClass", "Pick Face", nullptr));
        actionOutput_PickedFace->setText(QApplication::translate("HexMeshViewerClass", "Output PickedFace", nullptr));
        actionRead_PickedFace->setText(QApplication::translate("HexMeshViewerClass", "Read PickedFace", nullptr));
        actionDelete_Face->setText(QApplication::translate("HexMeshViewerClass", "Delete Face", nullptr));
        actionPick_Cell->setText(QApplication::translate("HexMeshViewerClass", "Pick Cell", nullptr));
        actionOutput_PickedAll->setText(QApplication::translate("HexMeshViewerClass", "Output PickedAll", nullptr));
        actionRead_PickedAll->setText(QApplication::translate("HexMeshViewerClass", "Read PickedAll", nullptr));
        actionDelete_Cell_2->setText(QApplication::translate("HexMeshViewerClass", "Delete Cell", nullptr));
        actionSaveVTK->setText(QApplication::translate("HexMeshViewerClass", "SaveVTK", nullptr));
        actionOpenOBJ->setText(QApplication::translate("HexMeshViewerClass", "OpenOBJ", nullptr));
        actionBeibdyDAT->setText(QApplication::translate("HexMeshViewerClass", "BeibdyDAT", nullptr));
        actionCheckCell->setText(QApplication::translate("HexMeshViewerClass", "CheckCell", nullptr));
        actionPDELinerShow->setText(QApplication::translate("HexMeshViewerClass", "PDELinerShow", nullptr));
        actionPreparePDE->setText(QApplication::translate("HexMeshViewerClass", "PreparePDE", nullptr));
        actionDrawBeisur->setText(QApplication::translate("HexMeshViewerClass", "DrawBeisur", nullptr));
        actionDeleteBeisur->setText(QApplication::translate("HexMeshViewerClass", "DeleteBeisur", nullptr));
        actionOutputDraw->setText(QApplication::translate("HexMeshViewerClass", "OutputDraw", nullptr));
        actionReadDraw->setText(QApplication::translate("HexMeshViewerClass", "ReadDraw", nullptr));
        actionOpDraw->setText(QApplication::translate("HexMeshViewerClass", "OpDraw", nullptr));
        actionShow_two_mesh->setText(QApplication::translate("HexMeshViewerClass", "Show two mesh", nullptr));
        actionSingularFace->setText(QApplication::translate("HexMeshViewerClass", "SingularFace", nullptr));
        actionShow_two_mesh_singular->setText(QApplication::translate("HexMeshViewerClass", "Show two mesh singular", nullptr));
        actionDrawFrame->setText(QApplication::translate("HexMeshViewerClass", "DrawFrame", nullptr));
        actionPDESquareLiner_Muti->setText(QApplication::translate("HexMeshViewerClass", "PDESquareLiner_Muti", nullptr));
        actionSOLIDFLAT_FRAME->setText(QApplication::translate("HexMeshViewerClass", "SOLIDFLAT_FRAME", nullptr));
        actionDelete_Cell1->setText(QApplication::translate("HexMeshViewerClass", "Delete Cell1", nullptr));
        actionBeibdyDAT1->setText(QApplication::translate("HexMeshViewerClass", "BeibdyDAT1", nullptr));
        actionOpenVTK_Tri->setText(QApplication::translate("HexMeshViewerClass", "OpenVTK_Tri", nullptr));
        actionDrameFrame1->setText(QApplication::translate("HexMeshViewerClass", "DrawFrame1", nullptr));
        actionFrame->setText(QApplication::translate("HexMeshViewerClass", "Frame1", nullptr));
        actionOutput_MAXMIN->setText(QApplication::translate("HexMeshViewerClass", "Output_MAXMIN", nullptr));
        actionSphereDraw->setText(QApplication::translate("HexMeshViewerClass", "SphereDraw", nullptr));
        actionErrorAndFrame->setText(QApplication::translate("HexMeshViewerClass", "ErrorAndFrame", nullptr));
        actionFrame_2->setText(QApplication::translate("HexMeshViewerClass", "Frame", nullptr));
        actionGrab->setText(QApplication::translate("HexMeshViewerClass", "Grab", nullptr));
        actionReadLine->setText(QApplication::translate("HexMeshViewerClass", "ReadLine", nullptr));
        actionOutputline->setText(QApplication::translate("HexMeshViewerClass", "Outputline", nullptr));
        actionOpenVtk_smooth->setText(QApplication::translate("HexMeshViewerClass", "OpenVtk_smooth", nullptr));
        actionTisu->setText(QApplication::translate("HexMeshViewerClass", "Tisu", nullptr));
        actionFrameTisu->setText(QApplication::translate("HexMeshViewerClass", "FrameTisu", nullptr));
        actionOutputCSV->setText(QApplication::translate("HexMeshViewerClass", "OutputCSV", nullptr));
        actionReadCSV->setText(QApplication::translate("HexMeshViewerClass", "ReadCSV", nullptr));
        actionSmooth->setText(QApplication::translate("HexMeshViewerClass", "Smooth", nullptr));
        actionBezierLine->setText(QApplication::translate("HexMeshViewerClass", "CreateQuad", nullptr));
        actionQuadCC_Crease->setText(QApplication::translate("HexMeshViewerClass", "QuadCC_Crease", nullptr));
        actionQuadV->setText(QApplication::translate("HexMeshViewerClass", "QuadV", nullptr));
        actionSetQuad1->setText(QApplication::translate("HexMeshViewerClass", "SetQuad1", nullptr));
        actionShowTwoQuad->setText(QApplication::translate("HexMeshViewerClass", "ShowTwoQuad", nullptr));
        actionPick_Point_2->setText(QApplication::translate("HexMeshViewerClass", "Pick Point", nullptr));
        actionSetFrame->setText(QApplication::translate("HexMeshViewerClass", "SetFrame", nullptr));
        actionShowFrame->setText(QApplication::translate("HexMeshViewerClass", "ShowFrame", nullptr));
        actionShowQuad->setText(QApplication::translate("HexMeshViewerClass", "ShowQuad", nullptr));
        actionPick_curve->setText(QApplication::translate("HexMeshViewerClass", "Create curve", nullptr));
        actionOutput_curve->setText(QApplication::translate("HexMeshViewerClass", "Output curve", nullptr));
        actionRead_curve->setText(QApplication::translate("HexMeshViewerClass", "Read curve", nullptr));
        actionBezierBDY->setText(QApplication::translate("HexMeshViewerClass", "BezierBDY", nullptr));
        actionBezierSharp->setText(QApplication::translate("HexMeshViewerClass", "BezierSharp", nullptr));
        actionCheckbei->setText(QApplication::translate("HexMeshViewerClass", "checkbei", nullptr));
        actionClear_edge->setText(QApplication::translate("HexMeshViewerClass", "Clear edge", nullptr));
        actionDATonly->setText(QApplication::translate("HexMeshViewerClass", "DATonly", nullptr));
        actionAdd_HexMesh->setText(QApplication::translate("HexMeshViewerClass", "Add HexMesh", nullptr));
        actionBezierSharp1->setText(QApplication::translate("HexMeshViewerClass", "BezierSharp1", nullptr));
        actionDraw_BSvector->setText(QApplication::translate("HexMeshViewerClass", "Draw_BSvector", nullptr));
        actionTransformation->setText(QApplication::translate("HexMeshViewerClass", "Transformation", nullptr));
        actionX->setText(QApplication::translate("HexMeshViewerClass", "x++", nullptr));
        actionX_2->setText(QApplication::translate("HexMeshViewerClass", "x--", nullptr));
        actionZ->setText(QApplication::translate("HexMeshViewerClass", "z++", nullptr));
        actionZ_2->setText(QApplication::translate("HexMeshViewerClass", "z--", nullptr));
        actionAngle->setText(QApplication::translate("HexMeshViewerClass", "angle++", nullptr));
        actionAngle_2->setText(QApplication::translate("HexMeshViewerClass", "angle--", nullptr));
        actionScale->setText(QApplication::translate("HexMeshViewerClass", "scale++", nullptr));
        actionScale_2->setText(QApplication::translate("HexMeshViewerClass", "scale--", nullptr));
        actionDraw_framevector->setText(QApplication::translate("HexMeshViewerClass", "Draw_framevector", nullptr));
        actionRead_PickedEdge1->setText(QApplication::translate("HexMeshViewerClass", "Read PickedEdge1", nullptr));
        actionOpenBezier->setText(QApplication::translate("HexMeshViewerClass", "OpenBezier", nullptr));
        actionOpenBezier1->setText(QApplication::translate("HexMeshViewerClass", "OpenBezier1", nullptr));
        actionOpenBezier2->setText(QApplication::translate("HexMeshViewerClass", "OpenBezier2", nullptr));
        actionOpenBezierNew->setText(QApplication::translate("HexMeshViewerClass", "OpenBezierNew", nullptr));
        actionActionCalPDE1->setText(QApplication::translate("HexMeshViewerClass", "actionCalPDE1", nullptr));
        actionVervexNum->setText(QApplication::translate("HexMeshViewerClass", "VervexNum", nullptr));
        actionReadXJ->setText(QApplication::translate("HexMeshViewerClass", "ReadXJ", nullptr));
        actionALL_LINES1->setText(QApplication::translate("HexMeshViewerClass", "ALL_LINES1", nullptr));
        actionReadMSH->setText(QApplication::translate("HexMeshViewerClass", "ReadMSH", nullptr));
        actionPICKFACE->setText(QApplication::translate("HexMeshViewerClass", "PICKFACE", nullptr));
        menuFile->setTitle(QApplication::translate("HexMeshViewerClass", "File", nullptr));
        menuFunction->setTitle(QApplication::translate("HexMeshViewerClass", "View", nullptr));
        menuFunction_2->setTitle(QApplication::translate("HexMeshViewerClass", "Function", nullptr));
        menuOther->setTitle(QApplication::translate("HexMeshViewerClass", "Other", nullptr));
        menuMore->setTitle(QApplication::translate("HexMeshViewerClass", "More", nullptr));
        menu2n_Point->setTitle(QApplication::translate("HexMeshViewerClass", "2n-Point", nullptr));
        menuPDE->setTitle(QApplication::translate("HexMeshViewerClass", "PDE", nullptr));
        menuPDE_Extra->setTitle(QApplication::translate("HexMeshViewerClass", "PDE_Extra", nullptr));
        menuExtra->setTitle(QApplication::translate("HexMeshViewerClass", "Extra", nullptr));
        menuLine->setTitle(QApplication::translate("HexMeshViewerClass", "Quad", nullptr));
        menuMove->setTitle(QApplication::translate("HexMeshViewerClass", "Move", nullptr));
    } // retranslateUi

};

namespace Ui {
    class HexMeshViewerClass: public Ui_HexMeshViewerClass {};
} // namespace Ui

QT_END_NAMESPACE

#endif // UI_HEXMESHVIEWER_H
